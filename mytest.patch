diff --git a/Cryptopp840/adhoc.cpp.copied b/Cryptopp840/adhoc.cpp.copied
index 8dab035..4a50480 100644
--- a/Cryptopp840/adhoc.cpp.copied
+++ b/Cryptopp840/adhoc.cpp.copied
@@ -2,7 +2,3 @@
  
  
  
- 
- 
- 
- 
diff --git a/Cryptopp840/cryptdll.vcxproj b/Cryptopp840/cryptdll.vcxproj
index e7ea41f..7f75f48 100644
--- a/Cryptopp840/cryptdll.vcxproj
+++ b/Cryptopp840/cryptdll.vcxproj
@@ -86,7 +86,7 @@
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
       <IntrinsicFunctions>true</IntrinsicFunctions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
@@ -103,7 +103,7 @@
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
diff --git a/Cryptopp840/cryptdll.vcxproj.filters b/Cryptopp840/cryptdll.vcxproj.filters
index 2068ab9..ebdb674 100644
--- a/Cryptopp840/cryptdll.vcxproj.filters
+++ b/Cryptopp840/cryptdll.vcxproj.filters
@@ -47,6 +47,9 @@
     <ClCompile Include="cryptlib.cpp">
       <Filter>Source Files</Filter>
     </ClCompile>
+    <ClCompile Include="darn.cpp">
+      <Filter>Source Files</Filter>
+    </ClCompile>
     <ClCompile Include="des.cpp">
       <Filter>Source Files</Filter>
     </ClCompile>
@@ -191,6 +194,9 @@
     <ClCompile Include="strciphr.cpp">
       <Filter>Source Files</Filter>
     </ClCompile>
+    <ClCompile Include="trdlocal.cpp">
+      <Filter>Source Files</Filter>
+    </ClCompile>
   </ItemGroup>
   <ItemGroup>
     <ClInclude Include="aes.h">
@@ -268,6 +274,9 @@
     <ClInclude Include="cryptlib.h">
       <Filter>Header Files</Filter>
     </ClInclude>
+    <ClInclude Include="darn.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
     <ClInclude Include="des.h">
       <Filter>Header Files</Filter>
     </ClInclude>
@@ -421,6 +430,9 @@
     <ClInclude Include="trap.h">
       <Filter>Header Files</Filter>
     </ClInclude>
+    <ClInclude Include="trdlocal.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
     <ClInclude Include="words.h">
       <Filter>Header Files</Filter>
     </ClInclude>
@@ -430,4 +442,9 @@
       <Filter>Source Files</Filter>
     </ResourceCompile>
   </ItemGroup>
-</Project>
\ No newline at end of file
+  <ItemGroup>
+    <CustomBuild Include="x64dll.asm">
+      <Filter>Source Files</Filter>
+    </CustomBuild>
+  </ItemGroup>
+</Project>
diff --git a/Cryptopp840/cryptest.vcxproj b/Cryptopp840/cryptest.vcxproj
index c4658f8..2cce52c 100644
--- a/Cryptopp840/cryptest.vcxproj
+++ b/Cryptopp840/cryptest.vcxproj
@@ -115,7 +115,7 @@
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
       <IntrinsicFunctions>true</IntrinsicFunctions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
@@ -132,7 +132,7 @@
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
diff --git a/Cryptopp840/cryptlib.vcxproj b/Cryptopp840/cryptlib.vcxproj
index 1794c35..2e7c7f9 100644
--- a/Cryptopp840/cryptlib.vcxproj
+++ b/Cryptopp840/cryptlib.vcxproj
@@ -109,7 +109,7 @@
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
       <IntrinsicFunctions>true</IntrinsicFunctions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
@@ -126,7 +126,7 @@
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
diff --git a/Cryptopp840/cryptlib.vcxproj.filters b/Cryptopp840/cryptlib.vcxproj.filters
index 0948307..4f089a1 100644
--- a/Cryptopp840/cryptlib.vcxproj.filters
+++ b/Cryptopp840/cryptlib.vcxproj.filters
@@ -1073,6 +1073,12 @@
     <CustomBuild Include="rdseed.asm">
       <Filter>Source Files</Filter>
     </CustomBuild>
+    <CustomBuild Include="x64dll.asm">
+      <Filter>Source Files</Filter>
+    </CustomBuild>
+    <CustomBuild Include="x64masm.asm">
+      <Filter>Source Files</Filter>
+    </CustomBuild>
     <CustomBuild Include="adhoc.cpp.proto">
       <Filter>Miscellaneous</Filter>
     </CustomBuild>
diff --git a/Cryptopp840/dlltest.vcxproj b/Cryptopp840/dlltest.vcxproj
index f39d903..099363a 100644
--- a/Cryptopp840/dlltest.vcxproj
+++ b/Cryptopp840/dlltest.vcxproj
@@ -80,7 +80,7 @@
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
       <IntrinsicFunctions>true</IntrinsicFunctions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
@@ -97,7 +97,7 @@
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
diff --git a/DesktopSharing(ServerO)/DesktopSharing/AesGcm.cpp b/DesktopSharing(ServerO)/DesktopSharing/AesGcm.cpp
deleted file mode 100644
index 80ec4aa..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/AesGcm.cpp
+++ /dev/null
@@ -1,232 +0,0 @@
-#pragma once
-
-#ifndef CRYPTOPP_DEFAULT_NO_DLL
-#define CRYPTOPP_DEFAULT_NO_DLL 1
-#endif
-
-#ifndef CRYPTOPP_ENABLE_NAMESPACE_WEAK
-#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 1
-#endif
-
-#ifdef _DEBUG
-#ifndef x64
-#pragma comment(lib, "../../Cryptopp840/Win32/Output/Debug/cryptlib.lib")
-#else
-#pragma comment(lib, "../../Cryptopp840/x64/Output/Debug/cryptlib.lib")
-#endif
-#else
-#ifndef x64
-#pragma comment(lib, "../../Cryptopp840/Win32/Output/Release/cryptlib.lib")
-#else
-#pragma comment(lib, "../../Cryptopp840/x64/Output/Release/cryptlib.lib")
-#endif
-#endif
-
-// Main Include
-#include "AesGcm.h"
-
-// Crypto++ Include
-#include "../../Cryptopp840/pch.h"
-#include "../../Cryptopp840/files.h"
-#include "../../Cryptopp840/default.h"
-#include "../../Cryptopp840/base64.h"
-#include "../../Cryptopp840/osrng.h"
-using CryptoPP::byte;
-
-//AES
-#include "../../Cryptopp840/hex.h"
-using CryptoPP::HexEncoder;
-using CryptoPP::HexDecoder;
-
-#include "../../Cryptopp840/cryptlib.h"
-using CryptoPP::BufferedTransformation;
-using CryptoPP::AuthenticatedSymmetricCipher;
-
-#include "../../Cryptopp840/filters.h"
-using CryptoPP::StringSink;
-using CryptoPP::StringSource;
-using CryptoPP::AuthenticatedEncryptionFilter;
-using CryptoPP::AuthenticatedDecryptionFilter;
-
-#include "../../Cryptopp840/aes.h"
-using CryptoPP::AES;
-
-#include "../../Cryptopp840/gcm.h"
-using CryptoPP::GCM;
-using CryptoPP::GCM_TablesOption;
-
-#include <string>
-
-#include "Global.h"
-
-USING_NAMESPACE(CryptoPP)
-USING_NAMESPACE(std)
-
-static inline RandomNumberGenerator& PSRNG(void)
-{
-	static AutoSeededRandomPool rng;
-	rng.Reseed();
-	return rng;
-}
-
-static std::string m_ErrorMessage;
-
-string converter(uint8_t* str) {
-	uint8_t key[] = { 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31 };
-	std::ostringstream ss;
-	std::copy(key, key + sizeof(key), std::ostream_iterator<int>(ss, ""));
-	return ss.str();
-}
-/// <summary>
-/// 
-/// </summary>
-/// <param name="aesKey">Key (32 byte version)</param>
-/// <param name="aesIV">IV (16 byte version)</param>
-/// <param name="inPlainText">Input data</param>
-/// <param name="size">Input data size</param>
-/// <param name="outEncryptedBase64">Encrypted data</param>
-/// <param name="dataLength">Length of encrypted data</param>
-/// <returns>If is encryption success</returns>
-bool encrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-	const char* inPlainText, size_t& size, char** outEncryptedBase64, int& dataLength)
-{
-	bool bR = false;
-	//const int TAG_SIZE = 12;
-	std::string outText;
-	std::string outBase64;
-
-	if (strlen(aesKey) > 31 && strlen(aesIV) > 15)
-	{
-		try
-		{
-			auto data = reinterpret_cast<const CryptoPP::byte*>(inPlainText);
-			
-			GCM< AES >::Encryption aesEncryption;
-			aesEncryption.SetKeyWithIV(reinterpret_cast<const CryptoPP::byte*>(aesKey),
-				AES::MAX_KEYLENGTH, reinterpret_cast<const CryptoPP::byte*>(aesIV), AES::BLOCKSIZE);
-			StringSource(data, size/*inPlainText*/, true, new AuthenticatedEncryptionFilter
-			(aesEncryption, new StringSink(outText)
-			) // AuthenticatedEncryptionFilter
-			); // StringSource
-
-#if ENCRYPT_USEBASE64
-			CryptoPP::Base64Encoder* base64Encoder = new CryptoPP::Base64Encoder
-			(new StringSink(outBase64), false);
-			base64Encoder->PutMessageEnd(reinterpret_cast<const CryptoPP::byte*> (outText.data()), outText.length());
-			delete base64Encoder;
-
-			dataLength = outBase64.length();
-			if (outBase64.length() > 0)
-			{
-				if (*outEncryptedBase64) free(*outEncryptedBase64);
-				*outEncryptedBase64 = static_cast<char*>(malloc(dataLength + 1));
-				memset(*outEncryptedBase64, '\0', dataLength + 1);
-				memcpy(*outEncryptedBase64, outBase64.c_str(), dataLength);
-
-				bR = true;
-			}
-			else
-			{
-				m_ErrorMessage.append("Encryption Failed");
-			}
-#else
-			if (outText.length() == size + 16)
-			{
-				dataLength = outText.length();
-				if (*outEncryptedBase64) free(*outEncryptedBase64);
-				*outEncryptedBase64 = static_cast<char*>(malloc(dataLength + 1));
-				memset(*outEncryptedBase64, '\0', dataLength + 1);
-				memcpy(*outEncryptedBase64, outText.c_str(), dataLength);
-
-				bR = true;
-			}
-#endif
-		}
-		catch (CryptoPP::InvalidArgument& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-		catch (CryptoPP::Exception& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-	}
-	else
-	{
-		m_ErrorMessage.append("AES Key or IV cannot be empty");
-	}
-
-	outText.clear();
-	outBase64.clear();
-
-	return bR;
-}
-
-bool decrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-	const char* inBase64Text, char** outDecrypted, int& dataLength)
-{
-	bool bR = false;
-	std::string outText;
-	std::string pszDecodedText;
-	Base64Decode(inBase64Text, pszDecodedText);
-
-	if (strlen(aesKey) > 31 && strlen(aesIV) > 15)
-	{
-		try
-		{
-			GCM< AES >::Decryption aesDecryption;
-			aesDecryption.SetKeyWithIV(reinterpret_cast<const CryptoPP::byte*>(aesKey),
-				AES::MAX_KEYLENGTH, reinterpret_cast<const CryptoPP::byte*>(aesIV), AES::BLOCKSIZE);
-			AuthenticatedDecryptionFilter df(aesDecryption, new StringSink(outText));
-
-			StringSource(pszDecodedText, true,
-				new Redirector(df /*, PASS_EVERYTHING */)
-			); // StringSource
-
-			bR = df.GetLastResult();
-
-			dataLength = outText.length();
-			if (outText.length() > 0)
-			{
-				if (*outDecrypted) free(*outDecrypted);
-				*outDecrypted = (char*)malloc(dataLength + 1);
-				memset(*outDecrypted, '\0', dataLength + 1);
-				memcpy(*outDecrypted, outText.c_str(), dataLength);
-
-				bR = true;
-			}
-			else
-			{
-				m_ErrorMessage.append("Decryption Failed");
-			}
-		}
-		catch (CryptoPP::HashVerificationFilter::HashVerificationFailed& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-		catch (CryptoPP::InvalidArgument& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-		catch (CryptoPP::Exception& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-	}
-	else
-	{
-		m_ErrorMessage.append("AES Key or IV cannot be empty");
-	}
-
-	return bR;
-}
-
-void Base64Decode(const std::string& inString, std::string& outString)
-{
-	StringSource(inString, true, new Base64Decoder(new StringSink(outString)));
-}
-
-void HexDecode(const std::string& inString, std::string& outString)
-{
-	StringSource(inString, true, new HexDecoder(new StringSink(outString)));
-}
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/AesGcm.h b/DesktopSharing(ServerO)/DesktopSharing/AesGcm.h
deleted file mode 100644
index 85530bd..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/AesGcm.h
+++ /dev/null
@@ -1,10 +0,0 @@
-#include <cryptlib.h>
-
-bool encrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-                        const char* inPlainText, size_t& size, char** outEncryptedBase64, int& dataLength);
-bool decrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-	const char* inBase64Text, char** outDecrypted, int& dataLength);
-void Base64Decode(const std::string& inString, std::string& outString);
-void HexDecode(const std::string& inString, std::string& outString);
-static inline CryptoPP::RandomNumberGenerator& PSRNG(void);
-std::string converter(uint8_t* str);
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj b/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj
index 0bba5af..131d8eb 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj
+++ b/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj
@@ -5,18 +5,10 @@
       <Configuration>Debug</Configuration>
       <Platform>Win32</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
     <ProjectConfiguration Include="Release|Win32">
       <Configuration>Release</Configuration>
       <Platform>Win32</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
   </ItemGroup>
   <PropertyGroup Label="Globals">
     <VCProjectVersion>15.0</VCProjectVersion>
@@ -33,13 +25,6 @@
     <CharacterSet>MultiByte</CharacterSet>
     <SpectreMitigation>false</SpectreMitigation>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v142</PlatformToolset>
-    <CharacterSet>MultiByte</CharacterSet>
-    <SpectreMitigation>false</SpectreMitigation>
-  </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <UseDebugLibraries>false</UseDebugLibraries>
@@ -48,14 +33,6 @@
     <CharacterSet>MultiByte</CharacterSet>
     <SpectreMitigation>false</SpectreMitigation>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v142</PlatformToolset>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <SpectreMitigation>false</SpectreMitigation>
-  </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
@@ -64,39 +41,25 @@
   <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
   <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
     <OutDir>$(ProjectDir)..\bin\$(Platform)\$(Configuration)\$(ProjectName)\</OutDir>
     <IntDir>$(ProjectDir)..\objs\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <OutDir>$(ProjectDir)..\bin\$(Platform)\$(Configuration)\$(ProjectName)\</OutDir>
-    <IntDir>$(ProjectDir)..\objs\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
     <OutDir>$(ProjectDir)..\bin\$(Platform)\$(Configuration)\$(ProjectName)\</OutDir>
     <IntDir>$(ProjectDir)..\objs\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <OutDir>$(ProjectDir)..\bin\$(Platform)\$(Configuration)\$(ProjectName)\</OutDir>
-    <IntDir>$(ProjectDir)..\objs\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
     <ClCompile>
       <WarningLevel>Level3</WarningLevel>
       <Optimization>Disabled</Optimization>
       <SDLCheck>true</SDLCheck>
       <ConformanceMode>false</ConformanceMode>
-      <AdditionalIncludeDirectories>$(ProjectDir)..\libs\glfw\include;$(ProjectDir)..\libs\gl3w;$(ProjectDir)codec\QsvCodec\include\msdk\include;$(ProjectDir)codec\QsvCodec\include;$(ProjectDir)libyuv\include;$(ProjectDir)capture;$(ProjectDir)imgui;$(ProjectDir)net;$(ProjectDir)wasapi;$(ProjectDir)codec;$(ProjectDir)..\libs\ffmpeg\include;$(ProjectDir)..\libs\SDL2\include;$(ProjectDir);D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>$(ProjectDir)..\libs\glfw\include;$(ProjectDir)..\libs\gl3w;$(ProjectDir)codec\QsvCodec\include\msdk\include;$(ProjectDir)codec\QsvCodec\include;$(ProjectDir)libyuv\include;$(ProjectDir)capture;$(ProjectDir)imgui;$(ProjectDir)net;$(ProjectDir)wasapi;$(ProjectDir)codec;$(ProjectDir)..\libs\ffmpeg\include;$(ProjectDir)..\libs\SDL2\include;$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <PreprocessorDefinitions>NOMINMAX;__WINDOWS_WASAPI__;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
       <LanguageStandard>stdcpplatest</LanguageStandard>
@@ -105,26 +68,7 @@
     <Link>
       <AdditionalLibraryDirectories>$(ProjectDir)..\libs\glfw\lib-vc2010-32;$(ProjectDir)..\libs\SDL2\lib\x86;$(ProjectDir)..\libs\ffmpeg\lib;$(ProjectDir)..\libs\portaudio\lib\debug;$(ProjectDir)..\libs\screen_capture\lib\debug;$(ProjectDir)..\libs\screen_capture_lite\lib\debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>glfw3.lib;opengl32.lib;SDL2.lib;avdevice.lib;avformat.lib;swresample.lib;avcodec.lib;swscale.lib;avutil.lib;dxgi.lib;d3d11.lib;d3d9.lib;dxva2.lib;D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840\Win32\Output\Debug\cryptlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <ProgramDatabaseFile>$(TEMP)$(TargetName).pdb</ProgramDatabaseFile>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <SDLCheck>true</SDLCheck>
-      <ConformanceMode>false</ConformanceMode>
-      <AdditionalIncludeDirectories>$(ProjectDir)..\libs\glfw\include;$(ProjectDir)..\libs\gl3w;$(ProjectDir)codec\QsvCodec\include\msdk\include;$(ProjectDir)codec\QsvCodec\include;$(ProjectDir)libyuv\include;$(ProjectDir)capture;$(ProjectDir)imgui;$(ProjectDir)net;$(ProjectDir)wasapi;$(ProjectDir)codec;$(ProjectDir)..\libs\ffmpeg\include;$(ProjectDir)..\libs\SDL2\include;$(ProjectDir);D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>NOMINMAX;__WINDOWS_WASAPI__;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <LanguageStandard>stdcpplatest</LanguageStandard>
-      <ProgramDataBaseFileName>$(TEMP)vc$(PlatformToolsetVersion).pdb</ProgramDataBaseFileName>
-    </ClCompile>
-    <Link>
-      <AdditionalLibraryDirectories>$(ProjectDir)..\libs\glfw\lib-vc2010-32;$(ProjectDir)..\libs\SDL2\lib\x86;$(ProjectDir)..\libs\ffmpeg\lib;$(ProjectDir)..\libs\portaudio\lib\debug;$(ProjectDir)..\libs\screen_capture\lib\debug;$(ProjectDir)..\libs\screen_capture_lite\lib\debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>glfw3.lib;opengl32.lib;SDL2.lib;avdevice.lib;avformat.lib;swresample.lib;avcodec.lib;swscale.lib;avutil.lib;dxgi.lib;d3d11.lib;d3d9.lib;dxva2.lib;D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840\Win32\Output\Debug\cryptlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>glfw3.lib;opengl32.lib;SDL2.lib;avdevice.lib;avformat.lib;swresample.lib;avcodec.lib;swscale.lib;avutil.lib;dxgi.lib;d3d11.lib;d3d9.lib;dxva2.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <ProgramDatabaseFile>$(TEMP)$(TargetName).pdb</ProgramDatabaseFile>
     </Link>
   </ItemDefinitionGroup>
@@ -136,30 +80,7 @@
       <IntrinsicFunctions>true</IntrinsicFunctions>
       <SDLCheck>true</SDLCheck>
       <ConformanceMode>false</ConformanceMode>
-      <AdditionalIncludeDirectories>D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840;$(ProjectDir)..\libs\glfw\include;$(ProjectDir)..\libs\gl3w;$(ProjectDir)codec\QsvCodec\include\msdk\include;$(ProjectDir)codec\QsvCodec\include;$(ProjectDir)libyuv\include;$(ProjectDir)capture;$(ProjectDir)imgui;$(ProjectDir)net;$(ProjectDir)wasapi;$(ProjectDir)codec;$(ProjectDir)..\libs\ffmpeg\include;$(ProjectDir)..\libs\SDL2\include;$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>NOMINMAX;__WINDOWS_WASAPI__;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <LanguageStandard>stdcpplatest</LanguageStandard>
-    </ClCompile>
-    <Link>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-      <AdditionalLibraryDirectories>$(ProjectDir)..\libs\glfw\lib-vc2010-32;$(ProjectDir)..\libs\SDL2\lib\x86;$(ProjectDir)..\libs\portaudio\lib\release;$(ProjectDir)..\libs\ffmpeg\lib;$(ProjectDir)..\libs\screen_capture\lib\release;$(ProjectDir)..\libs\screen_capture_lite\lib\release;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
-      <StackReserveSize>
-      </StackReserveSize>
-      <AdditionalDependencies>glfw3.lib;opengl32.lib;SDL2.lib;avdevice.lib;avformat.lib;swresample.lib;avcodec.lib;swscale.lib;avutil.lib;dxgi.lib;d3d11.lib;d3d9.lib;dxva2.lib;D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840\Win32\Output\Release\cryptlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>MaxSpeed</Optimization>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <SDLCheck>true</SDLCheck>
-      <ConformanceMode>false</ConformanceMode>
-      <AdditionalIncludeDirectories>D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840;$(ProjectDir)..\libs\glfw\include;$(ProjectDir)..\libs\gl3w;$(ProjectDir)codec\QsvCodec\include\msdk\include;$(ProjectDir)codec\QsvCodec\include;$(ProjectDir)libyuv\include;$(ProjectDir)capture;$(ProjectDir)imgui;$(ProjectDir)net;$(ProjectDir)wasapi;$(ProjectDir)codec;$(ProjectDir)..\libs\ffmpeg\include;$(ProjectDir)..\libs\SDL2\include;$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>$(ProjectDir)..\libs\glfw\include;$(ProjectDir)..\libs\gl3w;$(ProjectDir)codec\QsvCodec\include\msdk\include;$(ProjectDir)codec\QsvCodec\include;$(ProjectDir)libyuv\include;$(ProjectDir)capture;$(ProjectDir)imgui;$(ProjectDir)net;$(ProjectDir)wasapi;$(ProjectDir)codec;$(ProjectDir)..\libs\ffmpeg\include;$(ProjectDir)..\libs\SDL2\include;$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <PreprocessorDefinitions>NOMINMAX;__WINDOWS_WASAPI__;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
       <LanguageStandard>stdcpplatest</LanguageStandard>
@@ -171,11 +92,10 @@
       <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
       <StackReserveSize>
       </StackReserveSize>
-      <AdditionalDependencies>glfw3.lib;opengl32.lib;SDL2.lib;avdevice.lib;avformat.lib;swresample.lib;avcodec.lib;swscale.lib;avutil.lib;dxgi.lib;d3d11.lib;d3d9.lib;dxva2.lib;D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\Cryptopp840\Win32\Output\Release\cryptlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>glfw3.lib;opengl32.lib;SDL2.lib;avdevice.lib;avformat.lib;swresample.lib;avcodec.lib;swscale.lib;avutil.lib;dxgi.lib;d3d11.lib;d3d9.lib;dxva2.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
-    <ClCompile Include="AesGcm.cpp" />
     <ClCompile Include="capture\AudioCapture\AudioCapture.cpp" />
     <ClCompile Include="capture\AudioCapture\WASAPICapture.cpp" />
     <ClCompile Include="capture\AudioCapture\WASAPIPlayer.cpp" />
@@ -210,8 +130,6 @@
     <ClCompile Include="codec\QsvCodec\src\qsv_main.cpp" />
     <ClCompile Include="csrc\getopt.c" />
     <ClCompile Include="csrc\hd_client.c" />
-    <ClCompile Include="Global.cpp" />
-    <ClCompile Include="HexPacket.cpp" />
     <ClCompile Include="imgui\gl3w\GL\gl3w.c" />
     <ClCompile Include="imgui\imgui.cpp" />
     <ClCompile Include="imgui\imgui_demo.cpp" />
@@ -315,7 +233,6 @@
     <ClCompile Include="xop\RtspServer.cpp" />
   </ItemGroup>
   <ItemGroup>
-    <ClInclude Include="AesGcm.h" />
     <ClInclude Include="capture\AudioCapture\AudioBuffer.h" />
     <ClInclude Include="capture\AudioCapture\AudioCapture.h" />
     <ClInclude Include="capture\AudioCapture\WASAPICapture.h" />
@@ -355,8 +272,6 @@
     <ClInclude Include="codec\QsvCodec\src\mfx_vector.h" />
     <ClInclude Include="codec\QsvCodec\src\mfx_win_reg_key.h" />
     <ClInclude Include="csrc\getopt.h" />
-    <ClInclude Include="Global.h" />
-    <ClInclude Include="HexPacket.h" />
     <ClInclude Include="imgui\gl3w\GL\gl3w.h" />
     <ClInclude Include="imgui\gl3w\GL\glcorearb.h" />
     <ClInclude Include="imgui\imconfig.h" />
diff --git a/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj.filters b/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj.filters
index 76958d9..34c7f6d 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj.filters
+++ b/DesktopSharing(ServerO)/DesktopSharing/DesktopSharing.vcxproj.filters
@@ -59,9 +59,6 @@
     <Filter Include="csrc">
       <UniqueIdentifier>{29fd7463-869b-41ef-8bd7-9af0981f4ba5}</UniqueIdentifier>
     </Filter>
-    <Filter Include="src\Hex">
-      <UniqueIdentifier>{f6080465-c7bf-4549-8026-08ef5a2e3635}</UniqueIdentifier>
-    </Filter>
   </ItemGroup>
   <ItemGroup>
     <ClCompile Include="main.cpp">
@@ -469,15 +466,6 @@
     <ClCompile Include="csrc\getopt.c">
       <Filter>csrc</Filter>
     </ClCompile>
-    <ClCompile Include="AesGcm.cpp">
-      <Filter>src\Hex</Filter>
-    </ClCompile>
-    <ClCompile Include="Global.cpp">
-      <Filter>src\Hex</Filter>
-    </ClCompile>
-    <ClCompile Include="HexPacket.cpp">
-      <Filter>src\Hex</Filter>
-    </ClCompile>
   </ItemGroup>
   <ItemGroup>
     <ClInclude Include="net\Acceptor.h">
@@ -801,14 +789,5 @@
     <ClInclude Include="csrc\getopt.h">
       <Filter>csrc</Filter>
     </ClInclude>
-    <ClInclude Include="AesGcm.h">
-      <Filter>src\Hex</Filter>
-    </ClInclude>
-    <ClInclude Include="Global.h">
-      <Filter>src\Hex</Filter>
-    </ClInclude>
-    <ClInclude Include="HexPacket.h">
-      <Filter>src\Hex</Filter>
-    </ClInclude>
   </ItemGroup>
 </Project>
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/Global.cpp b/DesktopSharing(ServerO)/DesktopSharing/Global.cpp
deleted file mode 100644
index ddaa96e..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/Global.cpp
+++ /dev/null
@@ -1,86 +0,0 @@
-#include "Global.h"
-
-#if ENCRYPT_PKT
-extern std::string key;
-extern std::string iv;
-#endif
-
-char* encrypt(const char* message, size_t& size)
-{
-	int _size = 0;
-	char* outEncryptedText = nullptr;
-	char* data_to_encrypt = nullptr;
-#if ENCRYPT_PKT
-	std::string pktData;
-	size_t pktDataLen;
-	if (size == 0)
-	{
-		pktData = std::string(message);
-		pktDataLen = pktData.length();
-		if (pktData.length() > 3)
-		{
-			pktData.append(".");
-			pktDataLen++;
-		}
-	}
-	else
-	{
-		pktData = std::string(message, size);
-		pktDataLen = size;
-	}
-
-	if (encrypt_aes256_gcm(key.c_str(),
-		iv.c_str(), pktData.c_str(), pktDataLen, &outEncryptedText, _size) == false)
-	{
-		std::cout << "enrcypt err";
-	}
-	size = _size;
-#endif
-	return outEncryptedText;
-}
-
-void _clear_buff(const char* buff, size_t buf_size)
-{
-	if (buff != nullptr && buf_size > 0)
-	{
-		memset((void*)buff, 0, buf_size);
-	}
-}
-
-void clear_buffers(const char* buff1, size_t buff1_size,
-	const char* buff2, size_t buff2_size,
-	const char* buff3, size_t buff3_size)
-{
-	_clear_buff(buff1, buff1_size);
-	_clear_buff(buff2, buff2_size == 0 && buff2 != nullptr ? buff1_size : buff2_size);
-	_clear_buff(buff3, buff3_size == 0 && buff3 != nullptr ? buff2_size : buff3_size);
-}
-
-int clearRam(const char* buff1, void* buff2, void* buff3)
-{
-	int out = (int)strlen(buff1);
-	if (buff2 != nullptr) free(buff2);
-	if (buff3 != nullptr) free(buff3);
-	return out;
-}
-
-//buf - where save
-//buf_size - size of buffer
-//res - message to encrypt
-int encryptAndClear(const char* buf, int buf_size, char* res, int size)
-{	
-#if ENCRYPT_PKT == 1 
-	size_t sz = size;
-	auto* const encrypted = encrypt(res, sz);
-	snprintf((char*)buf, buf_size, encrypted);
-	return clearRam(buf, res, encrypted);
-#else
-	return encryptAndClearWO(buf, buf_size, res, size);
-#endif
-}
-
-int encryptAndClearWO(const char* buf, int buf_size, char* res, int size)
-{
-	if (res != nullptr) free(res);
-	return (int)strlen(buf);
-}
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/Global.h b/DesktopSharing(ServerO)/DesktopSharing/Global.h
deleted file mode 100644
index 84fa9de..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/Global.h
+++ /dev/null
@@ -1,33 +0,0 @@
-#pragma once
-#include <string>
-
-#include "AesGcm.h"
-
-//switch encryption/decryption
-#define ENCRYPT_PKT 0
-//switch encryption in moment when is request build
-#define ENCRYPT_WHENBUILD 0
-//force use base64 encryption
-#define ENCRYPT_USEBASE64 0
-
-static std::string hexKey = "2192B39425BBD08B6E8E61C5D1F1BC9F428FC569FBC6F78C0BC48FCCDB0F42AE";
-static std::string hexIV = "E1E592E87225847C11D948684F3B070D";
-
-#if ENCRYPT_PKT == 0
-static bool first = true;
-#endif
-
-//functions for encrypt and decrypt
-//main encrypt
-char* encrypt(const char* message, size_t& size);
-//clear buffer helper
-void _clear_buff(const char* buff, size_t buf_size);
-//clear buffers
-void clear_buffers(const char* buff1, size_t buff1_size,
-	const char* buff2 = nullptr, size_t buff2_size = 0,
-	const char* buff3 = nullptr, size_t buff3_size = 0);
-//free buffers 2,3 and return length of buff1
-int clearRam(const char* buff1, void* buff2 = nullptr, void* buff3 = nullptr);
-//main switch function for encrypt(or not) and clear res buffer
-int encryptAndClear(const char* buf, int buf_size, char* res, int size = 0);
-int encryptAndClearWO(const char* buf, int buf_size, char* res, int size = 0);
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/Hex/Crypto/AesGcm256.cpp b/DesktopSharing(ServerO)/DesktopSharing/Hex/Crypto/AesGcm256.cpp
deleted file mode 100644
index 4ce4326..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/Hex/Crypto/AesGcm256.cpp
+++ /dev/null
@@ -1,334 +0,0 @@
-// TestAES_GCM_256_C.cpp : Defines the entry point for the console application.
-//
-
-#ifndef _CRT_SECURE_NO_DEPRECATE
-#define _CRT_SECURE_NO_DEPRECATE 1
-#endif
-
-#ifndef CRYPTOPP_DEFAULT_NO_DLL
-#define CRYPTOPP_DEFAULT_NO_DLL 1
-#endif
-
-#ifndef CRYPTOPP_ENABLE_NAMESPACE_WEAK
-#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 1
-#endif
-
-//#ifdef _DEBUG
-//
-//#ifndef x64
-//#pragma comment(lib, "../Cryptopp840/Win32/Output/Debug/cryptlib.lib")
-//#else
-//#pragma comment(lib, "../Cryptopp840/x64/Output/Debug/cryptlib.lib")
-//#endif
-//#else
-//#ifndef x64
-//#pragma comment(lib, "../Cryptopp840/Win32/Output/Release/cryptlib.lib")
-//#else
-//#pragma comment(lib, "../Cryptopp840/x64/Output/Release/cryptlib.lib")
-//#endif
-//#endif
-
-#include "Hex/Crypto/AesGcm256.h"
-
-// Crypto++ Include
-
-#include "../Cryptopp840/pch.h"
-#include "../Cryptopp840/files.h"
-#include "../Cryptopp840/default.h"
-#include "../Cryptopp840/base64.h"
-#include "../Cryptopp840/osrng.h"
-using CryptoPP::byte;
-
-//AES
-#include "../Cryptopp840/hex.h"
-using CryptoPP::HexEncoder;
-using CryptoPP::HexDecoder;
-
-#include "../Cryptopp840/cryptlib.h"
-using CryptoPP::BufferedTransformation;
-using CryptoPP::AuthenticatedSymmetricCipher;
-
-#include "../Cryptopp840/filters.h"
-using CryptoPP::StringSink;
-using CryptoPP::StringSource;
-using CryptoPP::AuthenticatedEncryptionFilter;
-using CryptoPP::AuthenticatedDecryptionFilter;
-
-#include "../Cryptopp840/aes.h"
-using CryptoPP::AES;
-
-#include "../Cryptopp840/gcm.h"
-using CryptoPP::GCM;
-using CryptoPP::GCM_TablesOption;
-
-#include <iostream>
-#include <string>
-
-USING_NAMESPACE(CryptoPP)
-USING_NAMESPACE(std)
-
-static inline RandomNumberGenerator& PSRNG(void);
-static inline RandomNumberGenerator& PSRNG(void)
-{
-	static AutoSeededRandomPool rng;
-	rng.Reseed();
-	return rng;
-}
-
-static std::string m_ErrorMessage;
-
-//int main()
-//{
-//	//using above code these key and iv was generated
-//	std::string hexKey = "2192B39425BBD08B6E8E61C5D1F1BC9F428FC569FBC6F78C0BC48FCCDB0F42AE";
-//	std::string hexDecodedKey;
-//	HexDecode(hexKey, hexDecodedKey);
-//
-//	std::string hexIV = "E1E592E87225847C11D948684F3B070D";
-//	std::string hexDecodedIv;
-//	HexDecode(hexIV, hexDecodedIv);
-//
-//	std::string plainText = "Test encryption and decryption";
-//	std::string encryptedWithJava = "A/boAixWJKflKviHp2cfDl6l/xn1qw2MsHcKFkrOfm2XOVmawIFct4fS1w7wKw==";
-//	std::string encryptedWithCsharp = "A/boAixWJKflKviHp2cfDl6l/xn1qw2MsHcKFkrOH78KH7SmFDexI5kIja8JIfO42LGmGo5P";
-//
-//	printf("%s%s\n", "Plain Text: ", plainText.c_str());
-//
-//	//encrypt - result base64 encoded string
-//	char* outEncryptedText = NULL;
-//	int outDataLength = 0;
-//	bool bR = encrypt_aes256_gcm(hexDecodedKey.c_str(),
-//		hexDecodedIv.c_str(), plainText.c_str(), &outEncryptedText, outDataLength);
-//	printf("%s%s\n", "Encrypted base64 encoded: ", outEncryptedText);
-//
-//	//decrypt - result plain string
-//	char* outDecryptedText = NULL;
-//	int outDecryptedDataLength = 0;
-//	bR = decrypt_aes256_gcm(hexDecodedKey.c_str(),
-//		hexDecodedIv.c_str(), encryptedWithCsharp.c_str(), &outDecryptedText, outDecryptedDataLength);
-//	printf("%s%s\n", "Decrypted Text Encrypted by Java: ", outDecryptedText);
-//
-//	/*if (plainText == outDecryptedText)
-//	{
-//		printf("%s\n", "Test Passed");
-//	}
-//	else
-//	{
-//		printf("%s\n", "Test Failed");
-//	}*/
-//
-//	return 0;
-//}
-
-bool encrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-	const char* inPlainText, char** outEncryptedBase64, int& dataLength)
-{
-	bool bR = false;
-	//const int TAG_SIZE = 12;
-	std::string outText;
-	std::string outBase64;
-
-	CryptoPP::byte key[32];
-	memset(key, 0, sizeof(key));
-	CryptoPP::byte iv[16];
-	memset(iv, 0, sizeof(iv));
-
-	if (strlen(aesKey) > 31 && strlen(aesIV) > 15)
-	{
-		try
-		{
-			GCM< AES >::Encryption aesEncryption;
-			aesEncryption.SetKeyWithIV(key, AES::MAX_KEYLENGTH, iv, AES::BLOCKSIZE);
-			StringSource(inPlainText, true, new AuthenticatedEncryptionFilter
-			(aesEncryption, new StringSink(outText)
-			) // AuthenticatedEncryptionFilter
-			); // StringSource
-
-			CryptoPP::byte* outTextBytes = new CryptoPP::byte[outText.length()]();
-			memcpy_s(outTextBytes, outText.length(), outText.c_str(), outText.length());
-
-			CryptoPP::Base64Encoder* base64Encoder = new CryptoPP::Base64Encoder
-			(new StringSink(outBase64), false);
-			base64Encoder->PutMessageEnd(outTextBytes, outText.length());
-			delete base64Encoder;
-
-			dataLength = outBase64.length();
-			if (outBase64.length() > 0)
-			{
-				if (*outEncryptedBase64) free(*outEncryptedBase64);
-				*outEncryptedBase64 = (char*)malloc(dataLength + 1);
-				memset(*outEncryptedBase64, '\0', dataLength + 1);
-				memcpy(*outEncryptedBase64, outBase64.c_str(), dataLength);
-
-				bR = true;
-			}
-			else
-			{
-				m_ErrorMessage.append("Encryption Failed");
-			}
-
-		}
-		catch (CryptoPP::InvalidArgument& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-		catch (CryptoPP::Exception& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-	}
-	else
-	{
-		m_ErrorMessage.append("AES Key or IV cannot be empty");
-	}
-
-	outText.clear();
-	outBase64.clear();
-
-	return bR;
-}
-
-bool decrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-	const char* inBase64Text, char** outDecrypted, int& dataLength)
-{
-	bool bR = false;
-	std::string outText;
-	std::string pszDecodedText;
-	Base64Decode(inBase64Text, pszDecodedText);
-
-	const unsigned char* aesKeyTmp = reinterpret_cast<const unsigned char*>(aesKey);
-	const unsigned char* aesIVTmp = reinterpret_cast<const unsigned char*>(aesIV);
-
-	SecByteBlock key(aesKeyTmp, AES::MAX_KEYLENGTH);
-	SecByteBlock IV(aesIVTmp, AES::BLOCKSIZE);
-
-	if (strlen(aesKey) > 31 && strlen(aesIV) > 15)
-	{
-		try
-		{
-			GCM< AES >::Decryption aesDecryption;
-			aesDecryption.SetKeyWithIV(key, key.SizeInBytes(), IV, IV.SizeInBytes());
-			AuthenticatedDecryptionFilter df(aesDecryption, new StringSink(outText));
-
-			StringSource(pszDecodedText, true,
-				new Redirector(df /*, PASS_EVERYTHING */)
-			); // StringSource
-
-			bR = df.GetLastResult();
-
-			dataLength = outText.length();
-			if (outText.length() > 0)
-			{
-				if (*outDecrypted) free(*outDecrypted);
-				*outDecrypted = (char*)malloc(dataLength + 1);
-				memset(*outDecrypted, '\0', dataLength + 1);
-				memcpy(*outDecrypted, outText.c_str(), dataLength);
-
-				bR = true;
-			}
-			else
-			{
-				m_ErrorMessage.append("Decryption Failed");
-			}
-		}
-		catch (CryptoPP::HashVerificationFilter::HashVerificationFailed& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-		catch (CryptoPP::InvalidArgument& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-		catch (CryptoPP::Exception& e)
-		{
-			m_ErrorMessage.append(e.what());
-		}
-	}
-	else
-	{
-		m_ErrorMessage.append("AES Key or IV cannot be empty");
-	}
-
-	return bR;
-}
-
-void Base64Decode(const std::string& inString, std::string& outString)
-{
-	StringSource(inString, true, new Base64Decoder(new StringSink(outString)));
-}
-
-void HexDecode(const std::string& inString, std::string& outString)
-{
-	StringSource(inString, true, new HexDecoder(new StringSink(outString)));
-}
-
-//AutoSeededRandomPool prng;
-//
-//SecByteBlock key(AES::DEFAULT_KEYLENGTH);
-//prng.GenerateBlock(key, key.size());
-//
-//byte ctr[AES::BLOCKSIZE];
-//prng.GenerateBlock(ctr, sizeof(ctr));
-//
-//string plain = "CTR Mode Test";
-//string cipher, encoded, recovered;
-//
-///*********************************\
-//\*********************************/
-//
-//try
-//{
-//	cout << "plain text: " << plain << endl;
-//
-//	CTR_Mode< AES >::Encryption e;
-//	e.SetKeyWithIV(key, key.size(), ctr);
-//
-//	// The StreamTransformationFilter adds padding
-//	//  as required. ECB and CBC Mode must be padded
-//	//  to the block size of the cipher. CTR does not.
-//	StringSource ss1(plain, true,
-//		new StreamTransformationFilter(e,
-//			new StringSink(cipher)
-//		) // StreamTransformationFilter      
-//	); // StringSource
-//}
-//catch (CryptoPP::Exception& e)
-//{
-//	cerr << e.what() << endl;
-//	exit(1);
-//}
-//
-///*********************************\
-//\*********************************/
-//
-//// Pretty print cipher text
-//StringSource ss2(cipher, true,
-//	new HexEncoder(
-//		new StringSink(encoded)
-//	) // HexEncoder
-//); // StringSource
-//cout << "cipher text: " << encoded << endl;
-//
-///*********************************\
-//\*********************************/
-//
-//try
-//{
-//	CTR_Mode< AES >::Decryption d;
-//	d.SetKeyWithIV(key, key.size(), ctr);
-//
-//	// The StreamTransformationFilter removes
-//	//  padding as required.
-//	StringSource ss3(cipher, true,
-//		new StreamTransformationFilter(d,
-//			new StringSink(recovered)
-//		) // StreamTransformationFilter
-//	); // StringSource
-//
-//	cout << "recovered text: " << recovered << endl;
-//}
-//catch (CryptoPP::Exception& e)
-//{
-//	cerr << e.what() << endl;
-//	exit(1);
-//}
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/Hex/Crypto/AesGcm256.h b/DesktopSharing(ServerO)/DesktopSharing/Hex/Crypto/AesGcm256.h
deleted file mode 100644
index dbc69c7..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/Hex/Crypto/AesGcm256.h
+++ /dev/null
@@ -1,9 +0,0 @@
-#pragma once
-#include <string>
-
-bool encrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-                        const char* inPlainText, char** outEncryptedBase64, int& dataLength);
-bool decrypt_aes256_gcm(const char* aesKey, const char* aesIV,
-	const char* inBase64Text, char** outDecrypted, int& dataLength);
-void Base64Decode(const std::string& inString, std::string& outString);
-void HexDecode(const std::string& inString, std::string& outString);
\ No newline at end of file
diff --git a/DesktopSharing(ServerO)/DesktopSharing/HexPacket.cpp b/DesktopSharing(ServerO)/DesktopSharing/HexPacket.cpp
deleted file mode 100644
index 41e7b11..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/HexPacket.cpp
+++ /dev/null
@@ -1,80 +0,0 @@
-#include "HexPacket.h"
-
-#include <array>
-#include <charconv>
-
-#include "Global.h"
-
-void HexPacket::recreatePtr(char* str, uint32_t dataSizes)
-{
-	auto* tmp = this->data.get();
-	if(tmp != nullptr)
-	{
-		delete[](tmp);
-	}
-	tmp = new char[dataSizes];
-	memcpy_s(tmp, dataSizes, str, dataSizes);
-	this->data.reset(tmp);
-}
-
-
-HexPacket::HexPacket(std::shared_ptr<char> data, uint32_t size, uint32_t offset)
-{
-	this->recreatePtr(data.get(), size);
-	this->size = size;
-	this->offset = offset;
-}
-
-HexPacket::HexPacket(char* data, uint32_t size, uint32_t offset)
-{
-	this->recreatePtr(data, size);
-	this->size = size;
-	this->offset = offset;
-}
-
-HexPacket::~HexPacket()
-{
-	this->data.reset();
-	this->offset = 0;
-	this->size = 0;
-}
-
-
-bool HexPacket::encryptPacket()
-{
-	try
-	{
-		size_t size = this->size;
-		auto* const encrypted = encrypt(data.get(), size);
-		if (size + 16 >= this->size)
-		{
-			this->data.reset(reinterpret_cast<char*>(encrypted));
-			this->size = size;
-		}else
-		{
-			return false;
-		}
-	}
-	catch (...)
-	{
-		return false;
-	}
-	
-	return true;
-}
-
-//Don't forget free ptr after use
-const char* HexPacket::getDataToSend(size_t& outBytes)
-{
-	//create new data (4_null,x_lenght,y_data
-	auto s = (this->size - this->offset) + 4 + sizeof(this->size);
-	uint32_t toSendBytes = this->size - this->offset;
-	char* toSend = new char[s];
-	
-	std::memset(toSend, '\0', s);
-	std::memcpy(&(toSend[4]), &toSendBytes, sizeof(toSendBytes));
-	std::memcpy(&(toSend[4+sizeof(toSendBytes)]), &((this->data.get())[this->offset]), (this->size - this->offset));
-	
-	outBytes = s;
-	return static_cast<char*>(toSend);
-}
diff --git a/DesktopSharing(ServerO)/DesktopSharing/HexPacket.h b/DesktopSharing(ServerO)/DesktopSharing/HexPacket.h
deleted file mode 100644
index a7aee24..0000000
--- a/DesktopSharing(ServerO)/DesktopSharing/HexPacket.h
+++ /dev/null
@@ -1,44 +0,0 @@
-#pragma once
-#include <memory>
-
-class HexPacket
-{
-private:
-	std::shared_ptr<char> data;
-	uint32_t size;
-	uint32_t offset;
-	bool sended = false;
-
-	void recreatePtr(char* str, uint32_t dataSizes);
-	
-public:
-	HexPacket(std::shared_ptr<char> data, uint32_t size, uint32_t offset);
-	HexPacket(char* str, uint32_t uint32, uint32_t i);
-	~HexPacket();
-	//Encrypt data - maybe ram leak
-	bool encryptPacket();
-	//Don't forget free ptr
-	const char* getDataToSend(size_t& outBytes);
-
-
-	void set_offset(uint32_t offset)
-	{
-		this->offset = offset;
-	}
-
-	[[nodiscard]] const char* get_data() const
-	{
-		return data.get();
-	}
-
-	[[nodiscard]] uint32_t get_size() const
-	{
-		return size;
-	}
-
-	[[nodiscard]] uint32_t get_offset() const
-	{
-		return offset;
-	}
-};
-
diff --git a/DesktopSharing(ServerO)/DesktopSharing/main.cpp b/DesktopSharing(ServerO)/DesktopSharing/main.cpp
index b582915..f9a5dac 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/main.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/main.cpp
@@ -4,8 +4,6 @@
 #include "MainWindow.h"
 #include <cstdlib>
 
-
-#include "AesGcm.h"
 #include "csrc/getopt.h"
 
 #define TESTING 0
@@ -43,25 +41,12 @@ unsigned long __stdcall NET_RvThr(void* pParam) {
 	return Finished;
 }
 
-#include "Global.h"
-
-std::string key;
-std::string iv;
-
 int main(int argc, char **argv)
 {
-#if ENCRYPT_PKT > 1 || ENCRYPT_PKT < 0 || ENCRYPT_WHENBUILD > 1 || ENCRYPT_WHENBUILD < 0 || ENCRYPT_USEBASE64 > 1 || ENCRYPT_USEBASE64 < 0
-	throw new std::exception("Not allowed definitions!");
-#endif
-#if ENCRYPT_PKT
-	HexDecode(hexKey, key);
-	HexDecode(hexIV, iv);
-#endif
-	
-#ifndef  _DEBUG	
 	//Pipe Init Data
 	char buf[100];
 
+#ifndef  _DEBUG
 	LPTSTR lpszPipename1 = const_cast<LPSTR>("\\\\.\\pipe\\serverIN");
 	LPTSTR lpszPipename2 = const_cast<LPSTR>("\\\\.\\pipe\\serverOUT");
 
@@ -99,14 +84,15 @@ int main(int argc, char **argv)
 	} while (hPipe2 == NULL || hPipe2 == INVALID_HANDLE_VALUE);
 
 	hThread = CreateThread(NULL, 0, &NET_RvThr, NULL, 0, NULL);
+
+#endif
 	
-	WriteFile(hPipe1, buf, dwBytesToWrite, &cbWritten, NULL);
-	memset(buf, 0xCC, 100);
+	//WriteFile(hPipe1, buf, dwBytesToWrite, &cbWritten, NULL);
+	//memset(buf, 0xCC, 100);
 
 
-	CloseHandle(hPipe1);
-	CloseHandle(hPipe2);
-#endif
+	//CloseHandle(hPipe1);
+	//CloseHandle(hPipe2);
 	
 	AVConfig avconfig;
 	avconfig.bitrate_bps = 4000000; // video bitrate
diff --git a/DesktopSharing(ServerO)/DesktopSharing/net/BufferReader.cpp b/DesktopSharing(ServerO)/DesktopSharing/net/BufferReader.cpp
index a6ce75a..eb26871 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/net/BufferReader.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/net/BufferReader.cpp
@@ -4,8 +4,7 @@
 #include "BufferReader.h"
 #include "Socket.h"
 #include <cstring>
-#include <iostream>
-
+ 
 using namespace xop;
 uint32_t xop::ReadUint32BE(char* data)
 {
@@ -75,10 +74,7 @@ int BufferReader::Read(SOCKET sockfd)
 	}
 
 	int bytes_read = ::recv(sockfd, beginWrite(), MAX_BYTES_PER_READ, 0);
-
 	if(bytes_read > 0) {
-		std::string s(buffer_->data(), bytes_read);
-		std::cout << "Recv(" << bytes_read << "):" << s << std::endl;
 		writer_index_ += bytes_read;
 	}
 
diff --git a/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.cpp b/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.cpp
index 81d896f..0c620d9 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.cpp
@@ -4,9 +4,6 @@
 #include "BufferWriter.h"
 #include "Socket.h"
 #include "SocketUtil.h"
-#include "Global.h"
-
-#include <fstream>
 
 using namespace xop;
 
@@ -54,12 +51,11 @@ void xop::WriteUint16LE(char* p, uint16_t value)
 
 BufferWriter::BufferWriter(int capacity) 
 	: max_queue_length_(capacity)
-	, buffer_(new std::queue<Packet>), bufferEncryp_(new std::queue<HexPacket>)
+	, buffer_(new std::queue<Packet>)
 {
 	
 }	
 
-//tcp stream control
 bool BufferWriter::Append(std::shared_ptr<char> data, uint32_t size, uint32_t index)
 {
 	if (size <= index) {
@@ -71,20 +67,10 @@ bool BufferWriter::Append(std::shared_ptr<char> data, uint32_t size, uint32_t in
 	}
      
 	Packet pkt = {data, size, index};
-#if ENCRYPT_PKT
-	HexPacket hpkt(data, size, index);
-	if(hpkt.encryptPacket())
-	{
-		bufferEncryp_->emplace(std::move(hpkt));
-	}
-#endif
-
 	buffer_->emplace(std::move(pkt));
-	
 	return true;
 }
 
-//TCP data
 bool BufferWriter::Append(const char* data, uint32_t size, uint32_t index)
 {
 	if (size <= index) {
@@ -100,29 +86,12 @@ bool BufferWriter::Append(const char* data, uint32_t size, uint32_t index)
 	memcpy(pkt.data.get(), data, size);
 	pkt.size = size;
 	pkt.writeIndex = index;
-
-#if ENCRYPT_PKT
-	HexPacket hpkt(pkt.data, size, index);
-	if (hpkt.encryptPacket())
-	{
-		bufferEncryp_->emplace(std::move(hpkt));
-	}
-#endif
-
 	buffer_->emplace(std::move(pkt));
-	
 	return true;
 }
 
-#include "Global.h"
-#include "AesGcm.h"
-
-std::string getKey(void);
-std::string getIV(void);
-
-//send tcp data
 int BufferWriter::Send(SOCKET sockfd, int timeout)
-{		//TODO: skontrolovat ci odosielanie s kontrolou je v poho
+{		
 	if (timeout > 0) {
 		SocketUtil::SetBlock(sockfd, timeout); 
 	}
@@ -132,43 +101,18 @@ int BufferWriter::Send(SOCKET sockfd, int timeout)
 
 	do
 	{
-		if (buffer_->empty() || bufferEncryp_->empty()) {
+		if (buffer_->empty()) {
 			return 0;
 		}
-
-		count -= 1;
-		Packet& pkt = buffer_->front();
-		HexPacket& hpkt = bufferEncryp_->front();
 		
-#if ENCRYPT_PKT == 0
-		//Send data
-		std::cout << "Send(" << (pkt.size - pkt.writeIndex) << "): " << pkt.data.get() << std::endl;
+		count -= 1;
+		Packet &pkt = buffer_->front();
 		ret = ::send(sockfd, pkt.data.get() + pkt.writeIndex, pkt.size - pkt.writeIndex, 0);
-#else
-		size_t send_data_bytes = 0;
-		auto* send_data = hpkt.getDataToSend(send_data_bytes);
-		std::cout << "Send(" << (send_data_bytes - hpkt.get_offset()) << "): " << (ENCRYPT_USEBASE64 == 1 ? send_data : "(only base64 show data)") << std::endl;
-		ret = ::send(sockfd, send_data, send_data_bytes, 0);
-		delete[] send_data;
-#endif
-
-		//compute if is connection live
 		if (ret > 0) {
-			//check if is sended all things
 			pkt.writeIndex += ret;
-			if(ret <= 8)
-			{
-				throw std::exception("Network error!");
-			}
-			hpkt.set_offset(hpkt.get_offset() + ret - 4 - sizeof(uint32_t));
-			/*if (pkt.size == pkt.writeIndex) {
-				count += 1;
-				buffer_->pop();
-			}*/
-			if (hpkt.get_size() == hpkt.get_offset()) {
+			if (pkt.size == pkt.writeIndex) {
 				count += 1;
 				buffer_->pop();
-				bufferEncryp_->pop();
 			}
 		}
 		else if (ret < 0) {
diff --git a/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.h b/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.h
index 261bec7..f5769b9 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.h
+++ b/DesktopSharing(ServerO)/DesktopSharing/net/BufferWriter.h
@@ -8,8 +8,6 @@
 #include <memory>
 #include <queue>
 #include <string>
-
-#include "HexPacket.h"
 #include "Socket.h"
 
 namespace xop
@@ -49,8 +47,7 @@ private:
 		uint32_t writeIndex;
 	} Packet;
 
-	std::shared_ptr<std::queue<Packet>> buffer_;
-	std::shared_ptr<std::queue<HexPacket>> bufferEncryp_;
+	std::shared_ptr<std::queue<Packet>> buffer_;  		
 	int max_queue_length_ = 0;
 	 
 	static const int kMaxQueueLength = 10000;
diff --git a/DesktopSharing(ServerO)/DesktopSharing/net/TcpConnection.cpp b/DesktopSharing(ServerO)/DesktopSharing/net/TcpConnection.cpp
index 0f4d5ba..a880717 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/net/TcpConnection.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/net/TcpConnection.cpp
@@ -32,7 +32,6 @@ TcpConnection::~TcpConnection()
 	}
 }
 
-//unused
 void TcpConnection::Send(std::shared_ptr<char> data, uint32_t size)
 {
 	if (!is_closed_) {
@@ -44,9 +43,9 @@ void TcpConnection::Send(std::shared_ptr<char> data, uint32_t size)
 	}
 }
 
-//send data
 void TcpConnection::Send(const char *data, uint32_t size)
 {
+	//TODO: or here encrypt
 	if (!is_closed_) {
 		mutex_.lock();
 		write_buffer_->Append(data, size);
diff --git a/DesktopSharing(ServerO)/DesktopSharing/xop/MediaSession.cpp b/DesktopSharing(ServerO)/DesktopSharing/xop/MediaSession.cpp
index c6837fe..ac56813 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/xop/MediaSession.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/xop/MediaSession.cpp
@@ -7,8 +7,6 @@
 #include <ctime>
 #include <map>
 #include <forward_list>
-
-#include "Global.h"
 #include "net/Logger.h"
 #include "net/NetInterface.h"
 #include "net/SocketUtil.h"
@@ -45,14 +43,12 @@ MediaSession::~MediaSession()
 
 bool MediaSession::AddSource(MediaChannelId channelId, MediaSource* source)
 {
-	//source->set... zaciatok load
 	source->SetSendFrameCallback([this](MediaChannelId channelId, RtpPacket pkt) {
 		std::forward_list<std::shared_ptr<RtpConnection>> clients;
 		std::map<int, RtpPacket> packets;
 		{
 			std::lock_guard<std::mutex> lock(map_mutex_);
-			//fukncia pre registrovanie source ak je klient pripojeny
-			for (auto iter = clients_.begin(); iter != clients_.end();) { 
+			for (auto iter = clients_.begin(); iter != clients_.end();) {
 				auto conn = iter->second.lock();
 				if (conn == nullptr) {
 					clients_.erase(iter++);
@@ -67,7 +63,7 @@ bool MediaSession::AddSource(MediaChannelId channelId, MediaSource* source)
 							tmpPkt.last = pkt.last;
 							tmpPkt.timestamp = pkt.timestamp;
 							tmpPkt.type = pkt.type;
-							packets.emplace(id, tmpPkt);//pridanie paket data do list
+							packets.emplace(id, tmpPkt);
 						}
 						clients.emplace_front(conn);
 					}
@@ -84,7 +80,7 @@ bool MediaSession::AddSource(MediaChannelId channelId, MediaSource* source)
 				auto iter2 = packets.find(id);
 				if (iter2 != packets.end()) {
 					count++;
-					ret = iter->SendRtpPacket(channelId, iter2->second); //Odoslanie dát
+					ret = iter->SendRtpPacket(channelId, iter2->second);
 					if (is_multicast_ && ret == 0) {
 						break;
 					}				
diff --git a/DesktopSharing(ServerO)/DesktopSharing/xop/RtpConnection.cpp b/DesktopSharing(ServerO)/DesktopSharing/xop/RtpConnection.cpp
index 5f0ccfd..db25545 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/xop/RtpConnection.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/xop/RtpConnection.cpp
@@ -2,11 +2,8 @@
 // 2018-9-30
 
 #include "RtpConnection.h"
-
-#include "Global.h"
 #include "RtspConnection.h"
 #include "net/SocketUtil.h"
-//#include "AesGcm.h"
 
 using namespace std;
 using namespace xop;
@@ -232,13 +229,8 @@ void RtpConnection::SetRtpHeader(MediaChannelId channel_id, RtpPacket pkt)
 	}
 }
 
-#if ENCRYPT_PKT
-extern std::string key;
-extern std::string iv;
-#endif
-
 int RtpConnection::SendRtpPacket(MediaChannelId channel_id, RtpPacket pkt)
-{
+{    //TODO: add crypto (two func down)
 	if (is_closed_) {
 		return -1;
 	}
@@ -267,8 +259,6 @@ int RtpConnection::SendRtpPacket(MediaChannelId channel_id, RtpPacket pkt)
 	return ret ? 0 : -1;
 }
 
-//#include "Global.h"
-
 int RtpConnection::SendRtpOverTcp(MediaChannelId channel_id, RtpPacket pkt)
 {
 	auto conn = rtsp_connection_.lock();
@@ -283,8 +273,6 @@ int RtpConnection::SendRtpOverTcp(MediaChannelId channel_id, RtpPacket pkt)
 	rtpPktPtr[2] = (char)(((pkt.size-4)&0xFF00)>>8);
 	rtpPktPtr[3] = (char)((pkt.size -4)&0xFF);
 
-	std::cout << "SendTCP("<< pkt.size << ")" << std::endl;
-
 	conn->Send((char*)rtpPktPtr, pkt.size);
 	return pkt.size;
 }
@@ -293,40 +281,15 @@ int RtpConnection::SendRtpOverUdp(MediaChannelId channel_id, RtpPacket pkt)
 {
 	//media_channel_info_[channel_id].octetCount  += pktSize;
 	//media_channel_info_[channel_id].packetCount += 1;
-	int ret = -1;
-	
-	//Encryption for data(udp)
-#if ENCRYPT_PKT
-	HexPacket* hpkt = new HexPacket(reinterpret_cast<char*>(pkt.data.get() + 4), pkt.size - 4, 0);
-	hpkt->encryptPacket();
-	size_t send_data_bytes = 0;
-	const auto* send_data = hpkt->getDataToSend(send_data_bytes);
-
-	std::cout << "SendUDP(" << send_data_bytes << ")/clear(" << pkt.size - 4 << ")" << std::endl;
-	ret = sendto(rtpfd_[channel_id], send_data, send_data_bytes, 0,
-		(struct sockaddr*)&(peer_rtp_addr_[channel_id]),
-		sizeof(struct sockaddr_in));
-	
-	delete[] send_data;
-	free(hpkt);
-#else
-	std::cout << "SendUDP(" << pkt.size - 4 << ")" << std::endl;
-	ret = sendto(rtpfd_[channel_id], (const char*)pkt.data.get()+4, pkt.size-4, 0, 
+
+	int ret = sendto(rtpfd_[channel_id], (const char*)pkt.data.get()+4, pkt.size-4, 0, 
 					(struct sockaddr *)&(peer_rtp_addr_[channel_id]),
 					sizeof(struct sockaddr_in));
-#endif
-
-
-	//TODO: correct ret value
+                   
 	if(ret < 0) {        
 		Teardown();
 		return -1;
 	}
 
-	/*if(ret == hpkt->get_size())
-	{
-		
-	}*/
-	
 	return ret;
 }
diff --git a/DesktopSharing(ServerO)/DesktopSharing/xop/RtspConnection.cpp b/DesktopSharing(ServerO)/DesktopSharing/xop/RtspConnection.cpp
index 81880af..c37c569 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/xop/RtspConnection.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/xop/RtspConnection.cpp
@@ -8,7 +8,7 @@
 #include "net/SocketUtil.h"
 
 #define USER_AGENT "-_-"
-#define RTSP_DEBUG 0
+#define RTSP_DEBUG 1
 #define MAX_RTSP_MESSAGE_SIZE 2048
 
 using namespace xop;
diff --git a/DesktopSharing(ServerO)/DesktopSharing/xop/RtspMessage.cpp b/DesktopSharing(ServerO)/DesktopSharing/xop/RtspMessage.cpp
index 27997e6..74ab0ac 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/xop/RtspMessage.cpp
+++ b/DesktopSharing(ServerO)/DesktopSharing/xop/RtspMessage.cpp
@@ -11,8 +11,6 @@
 
 #include <iostream>
 
-
-#include "AesGcm.h"
 #include "media.h"
 
 using namespace std;
@@ -127,7 +125,7 @@ bool RtspRequest::ParseRequestLine(const char* begin, const char* end)
 bool RtspRequest::ParseHeadersLine(const char* begin, const char* end)
 {
 	string message(begin, end);
-	//std::cout << "Parsing Header: " << message << "\n";
+	std::cout << "Parsing Header: " << message << "\n";
 	if(!ParseCSeq(message)) {
 		if (header_line_param_.find("cseq") == header_line_param_.end()) {
 			return false;
@@ -181,7 +179,7 @@ bool RtspRequest::ParseHeadersLine(const char* begin, const char* end)
 
 bool RtspRequest::ParseCSeq(std::string& message)
 {
-	const std::size_t pos = message.find("CSeq");
+	std::size_t pos = message.find("CSeq");
 	if (pos != std::string::npos) {
 		uint32_t cseq = 0;
 		sscanf(message.c_str()+pos, "%*[^:]: %u", &cseq);
@@ -204,7 +202,7 @@ bool RtspRequest::ParseAccept(std::string& message)
 
 bool RtspRequest::ParseTransport(std::string& message)
 {
-	//std::cout << "Parsing: " << message << "\n";
+	std::cout << "Parsing: " << message << "\n";
 	std::size_t pos = message.find("Transport");
 	if(pos != std::string::npos) {
 		if((pos=message.find("RTP/AVP/TCP")) != std::string::npos) {
@@ -249,7 +247,7 @@ bool RtspRequest::ParseTransport(std::string& message)
 
 bool RtspRequest::ParseSessionId(std::string& message)
 {
-	const std::size_t pos = message.find("Session");
+	std::size_t pos = message.find("Session");
 	if (pos != std::string::npos) {
 		uint32_t session_id = 0;
 		if (sscanf(message.c_str() + pos, "%*[^:]: %u", &session_id) != 1) {
@@ -265,9 +263,9 @@ bool RtspRequest::ParseMediaChannel(std::string& message)
 {
 	channel_id_ = channel_0;
 
-	const auto iter = request_line_param_.find("url");
+	auto iter = request_line_param_.find("url");
 	if(iter != request_line_param_.end()) {
-		const std::size_t pos = iter->second.first.find("track1");
+		std::size_t pos = iter->second.first.find("track1");
 		if (pos != std::string::npos) {
 			channel_id_ = channel_1;
 		}       
@@ -295,7 +293,7 @@ bool RtspRequest::ParseAuthorization(std::string& message)
 uint32_t RtspRequest::GetCSeq() const
 {
 	uint32_t cseq = 0;
-	const auto iter = header_line_param_.find("cseq");
+	auto iter = header_line_param_.find("cseq");
 	if(iter != header_line_param_.end()) {
 		cseq = iter->second.second;
 	}
@@ -305,7 +303,7 @@ uint32_t RtspRequest::GetCSeq() const
 
 std::string RtspRequest::GetIp() const
 {
-	const auto iter = request_line_param_.find("url_ip");
+	auto iter = request_line_param_.find("url_ip");
 	if(iter != request_line_param_.end()) {
 		return iter->second.first;
 	}
@@ -315,7 +313,7 @@ std::string RtspRequest::GetIp() const
 
 std::string RtspRequest::GetRtspUrl() const
 {
-	const auto iter = request_line_param_.find("url");
+	auto iter = request_line_param_.find("url");
 	if(iter != request_line_param_.end()) {
 		return iter->second.first;
 	}
@@ -325,7 +323,7 @@ std::string RtspRequest::GetRtspUrl() const
 
 std::string RtspRequest::GetRtspUrlSuffix() const
 {
-	const auto iter = request_line_param_.find("url_suffix");
+	auto iter = request_line_param_.find("url_suffix");
 	if(iter != request_line_param_.end()) {
 		return iter->second.first;
 	}
@@ -340,7 +338,7 @@ std::string RtspRequest::GetAuthResponse() const
 
 uint8_t RtspRequest::GetRtpChannel() const
 {
-	const auto iter = header_line_param_.find("rtp_channel");
+	auto iter = header_line_param_.find("rtp_channel");
 	if(iter != header_line_param_.end()) {
 		return iter->second.second;
 	}
@@ -350,7 +348,7 @@ uint8_t RtspRequest::GetRtpChannel() const
 
 uint8_t RtspRequest::GetRtcpChannel() const
 {
-	const auto iter = header_line_param_.find("rtcp_channel");
+	auto iter = header_line_param_.find("rtcp_channel");
 	if(iter != header_line_param_.end()) {
 		return iter->second.second;
 	}
@@ -360,7 +358,7 @@ uint8_t RtspRequest::GetRtcpChannel() const
 
 uint16_t RtspRequest::GetRtpPort() const
 {
-	const auto iter = header_line_param_.find("rtp_port");
+	auto iter = header_line_param_.find("rtp_port");
 	if(iter != header_line_param_.end()) {
 		return iter->second.second;
 	}
@@ -370,7 +368,7 @@ uint16_t RtspRequest::GetRtpPort() const
 
 uint16_t RtspRequest::GetRtcpPort() const
 {
-	const auto iter = header_line_param_.find("rtcp_port");
+	auto iter = header_line_param_.find("rtcp_port");
 	if(iter != header_line_param_.end()) {
 		return iter->second.second;
 	}
@@ -378,45 +376,23 @@ uint16_t RtspRequest::GetRtcpPort() const
 	return 0;
 }
 
-#include "Global.h"//ENCRYPTION------------------------------------------------------------
-
-int returnValue(const char* buf, int buf_size, char* res)
-{
-#if ENCRYPT_WHENBUILD
-	return encryptAndClear(buf, buf_size, res);
-#else
-	return encryptAndClearWO(buf, buf_size, res);
-#endif
-}
-
 int RtspRequest::BuildOptionRes(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-
-	snprintf((char*)ptr, buf_size, "RTSP/1.0 200 OK\r\n"
-		"CSeq: %u\r\n"
-		"Public: OPTIONS, DESCRIBE, SETUP, TEARDOWN, PLAY\r\n"
-		"\r\n",
-		this->GetCSeq());
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
+			"RTSP/1.0 200 OK\r\n"
+			"CSeq: %u\r\n"
+			"Public: OPTIONS, DESCRIBE, SETUP, TEARDOWN, PLAY\r\n"
+			"\r\n",
+			this->GetCSeq());
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildDescribeRes(const char* buf, int buf_size, const char* sdp)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %u\r\n"
 			"Content-Length: %d\r\n"
@@ -426,20 +402,14 @@ int RtspRequest::BuildDescribeRes(const char* buf, int buf_size, const char* sdp
 			this->GetCSeq(), 
 			(int)strlen(sdp), 
 			sdp);
-	
-	return returnValue(buf, buf_size, res);
+
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildSetupMulticastRes(const char* buf, int buf_size, const char* multicast_ip, uint16_t port, uint32_t session_id)
 {	
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %u\r\n"
 			"Transport: RTP/AVP;multicast;destination=%s;source=%s;port=%u-0;ttl=255\r\n"
@@ -451,19 +421,13 @@ int RtspRequest::BuildSetupMulticastRes(const char* buf, int buf_size, const cha
 			port,
 			session_id);
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildSetupUdpRes(const char* buf, int buf_size, uint16_t rtp_chn, uint16_t rtcp_chn, uint32_t session_id)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %u\r\n"
 			"Transport: RTP/AVP;unicast;client_port=%hu-%hu;server_port=%hu-%hu\r\n"
@@ -476,19 +440,13 @@ int RtspRequest::BuildSetupUdpRes(const char* buf, int buf_size, uint16_t rtp_ch
 			rtcp_chn,
 			session_id);
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildSetupTcpRes(const char* buf, int buf_size, uint16_t rtp_chn, uint16_t rtcp_chn, uint32_t session_id)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %u\r\n"
 			"Transport: RTP/AVP/TCP;unicast;interleaved=%d-%d\r\n"
@@ -498,19 +456,13 @@ int RtspRequest::BuildSetupTcpRes(const char* buf, int buf_size, uint16_t rtp_ch
 			rtp_chn, rtcp_chn,
 			session_id);
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildPlayRes(const char* buf, int buf_size, const char* rtpInfo, uint32_t session_id)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %d\r\n"
 			"Range: npt=0.000-\r\n"
@@ -519,24 +471,17 @@ int RtspRequest::BuildPlayRes(const char* buf, int buf_size, const char* rtpInfo
 			session_id);
 
 	if (rtpInfo != nullptr) {
-		snprintf((char*)ptr + strlen(ptr), buf_size - strlen(ptr), "%s\r\n", rtpInfo);
+		snprintf((char*)buf + strlen(buf), buf_size - strlen(buf), "%s\r\n", rtpInfo);
 	}
 
-	snprintf((char*)ptr + strlen(ptr), buf_size - strlen(ptr), "\r\n");
-	
-	return returnValue(buf, buf_size, res);
+	snprintf((char*)buf + strlen(buf), buf_size - strlen(buf), "\r\n");
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildTeardownRes(const char* buf, int buf_size, uint32_t session_id)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %d\r\n"
 			"Session: %u\r\n"
@@ -544,19 +489,13 @@ int RtspRequest::BuildTeardownRes(const char* buf, int buf_size, uint32_t sessio
 			this->GetCSeq(),
 			session_id);
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildGetParamterRes(const char* buf, int buf_size, uint32_t session_id)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 200 OK\r\n"
 			"CSeq: %d\r\n"
 			"Session: %u\r\n"
@@ -564,73 +503,49 @@ int RtspRequest::BuildGetParamterRes(const char* buf, int buf_size, uint32_t ses
 			this->GetCSeq(),
 			session_id);
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildNotFoundRes(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 404 Stream Not Found\r\n"
 			"CSeq: %u\r\n"
 			"\r\n",
 			this->GetCSeq());
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildServerErrorRes(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 500 Internal Server Error\r\n"
 			"CSeq: %u\r\n"
 			"\r\n",
 			this->GetCSeq());
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildUnsupportedRes(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 461 Unsupported transport\r\n"
 			"CSeq: %d\r\n"
 			"\r\n",
 			this->GetCSeq());
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspRequest::BuildUnauthorizedRes(const char* buf, int buf_size, const char* realm, const char* nonce)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size,
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RTSP/1.0 401 Unauthorized\r\n"
 			"CSeq: %d\r\n"
 			"WWW-Authenticate: Digest realm=\"%s\", nonce=\"%s\"\r\n"
@@ -639,7 +554,7 @@ int RtspRequest::BuildUnauthorizedRes(const char* buf, int buf_size, const char*
 			realm,
 			nonce);
 
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 bool RtspResponse::ParseResponse(xop::BufferReader *buffer)
@@ -665,14 +580,8 @@ bool RtspResponse::ParseResponse(xop::BufferReader *buffer)
 
 int RtspResponse::BuildOptionReq(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size, //change buf <-> res
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"OPTIONS %s RTSP/1.0\r\n"
 			"CSeq: %u\r\n"
 			"User-Agent: %s\r\n"
@@ -682,19 +591,13 @@ int RtspResponse::BuildOptionReq(const char* buf, int buf_size)
 			user_agent_.c_str());
 
 	method_ = OPTIONS;
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspResponse::BuildAnnounceReq(const char* buf, int buf_size, const char *sdp)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size, //change buf <-> res
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"ANNOUNCE %s RTSP/1.0\r\n"
 			"Content-Type: application/sdp\r\n"
 			"CSeq: %u\r\n"
@@ -711,19 +614,13 @@ int RtspResponse::BuildAnnounceReq(const char* buf, int buf_size, const char *sd
 			sdp);
 
 	method_ = ANNOUNCE;
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspResponse::BuildDescribeReq(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size, //change buf <-> res
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"DESCRIBE %s RTSP/1.0\r\n"
 			"CSeq: %u\r\n"
 			"Accept: application/sdp\r\n"
@@ -734,7 +631,7 @@ int RtspResponse::BuildDescribeReq(const char* buf, int buf_size)
 			user_agent_.c_str());
 
 	method_ = DESCRIBE;
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspResponse::BuildSetupTcpReq(const char* buf, int buf_size, int trackId)
@@ -745,14 +642,8 @@ int RtspResponse::BuildSetupTcpReq(const char* buf, int buf_size, int trackId)
 		interleaved[1] = 3;
 	}
 
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size, //change buf <-> res
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"SETUP %s/track%d RTSP/1.0\r\n"
 			"Transport: RTP/AVP/TCP;unicast;mode=record;interleaved=%d-%d\r\n"
 			"CSeq: %u\r\n"
@@ -768,19 +659,13 @@ int RtspResponse::BuildSetupTcpReq(const char* buf, int buf_size, int trackId)
 			this->GetSession().c_str());
 
 	method_ = SETUP;
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
 
 int RtspResponse::BuildRecordReq(const char* buf, int buf_size)
 {
-	//create encryption buffer if is needed
-	auto* res = ENCRYPT_WHENBUILD == 1 ? new char[buf_size] : nullptr;
-	//create universal ptr (enrypt/clear)
-	const auto* ptr = ENCRYPT_WHENBUILD == 1 ? res : buf;
-	//Clear buffers
-	clear_buffers(buf, buf_size, res);
-	
-	snprintf((char*)ptr, buf_size, //change buf <-> res
+	memset((void*)buf, 0, buf_size);
+	snprintf((char*)buf, buf_size,
 			"RECORD %s RTSP/1.0\r\n"
 			"Range: npt=0.000-\r\n"
 			"CSeq: %u\r\n"
@@ -793,5 +678,5 @@ int RtspResponse::BuildRecordReq(const char* buf, int buf_size)
 			this->GetSession().c_str());
 
 	method_ = RECORD;
-	return returnValue(buf, buf_size, res);
+	return (int)strlen(buf);
 }
diff --git a/DesktopSharing(ServerO)/DesktopSharing/xop/rtp.h b/DesktopSharing(ServerO)/DesktopSharing/xop/rtp.h
index f0f6a88..965ff6f 100644
--- a/DesktopSharing(ServerO)/DesktopSharing/xop/rtp.h
+++ b/DesktopSharing(ServerO)/DesktopSharing/xop/rtp.h
@@ -64,7 +64,7 @@ struct MediaChannelInfo
 struct RtpPacket
 {
 	RtpPacket()
-		: data(new uint8_t[2048])
+		: data(new uint8_t[1600])
 	{
 		type = 0;
 	}
diff --git a/LibHexCryptoStandard/Algoritm/AesGcmOne.cs b/LibHexCrypto/Algoritm/AES.cs
similarity index 94%
rename from LibHexCryptoStandard/Algoritm/AesGcmOne.cs
rename to LibHexCrypto/Algoritm/AES.cs
index cfc52da..70664ae 100644
--- a/LibHexCryptoStandard/Algoritm/AesGcmOne.cs
+++ b/LibHexCrypto/Algoritm/AES.cs
@@ -1,12 +1,15 @@
 ﻿using System;
 using System.Buffers.Binary;
+using System.Collections.Generic;
+using System.Linq;
 using System.Security.Cryptography;
 using System.Text;
-using LibHexCryptoStandard.Hashs;
+using System.Threading.Tasks;
+using LibHexCrypto.Hashs;
 
-namespace LibHexCryptoStandard.Algoritm
+namespace LibHexCrypto.Algoritm
 {
-    public static class AesGcmOne
+    public static class AES
     {
         public static string Encrypt(string plain, string key, ushort bitLength, out Span<byte> nonceIV)
         {
diff --git a/LibHexCryptoStandard/Hashs/SHA.cs b/LibHexCrypto/Hashs/SHA.cs
similarity index 97%
rename from LibHexCryptoStandard/Hashs/SHA.cs
rename to LibHexCrypto/Hashs/SHA.cs
index 5ce6882..bcc1045 100644
--- a/LibHexCryptoStandard/Hashs/SHA.cs
+++ b/LibHexCrypto/Hashs/SHA.cs
@@ -4,7 +4,7 @@ using System.Linq;
 using System.Text;
 using Org.BouncyCastle.Crypto.Digests;
 
-namespace LibHexCryptoStandard.Hashs
+namespace LibHexCrypto.Hashs
 {
     public static class SHA
     {
diff --git a/LibHexCrypto/LibHexCrypto.csproj b/LibHexCrypto/LibHexCrypto.csproj
index db353cb..8d6a69b 100644
--- a/LibHexCrypto/LibHexCrypto.csproj
+++ b/LibHexCrypto/LibHexCrypto.csproj
@@ -2,16 +2,10 @@
 
   <PropertyGroup>
     <TargetFramework>net5.0</TargetFramework>
-    <Platforms>AnyCPU;x86;x64</Platforms>
   </PropertyGroup>
 
   <ItemGroup>
     <PackageReference Include="BouncyCastle" Version="1.8.9" />
   </ItemGroup>
 
-  <ItemGroup>
-    <Folder Include="Algoritm\" />
-    <Folder Include="Hashs\" />
-  </ItemGroup>
-
 </Project>
diff --git a/LibHexCryptoStandard/Algoritm/AesGcm256.cs b/LibHexCryptoStandard/Algoritm/AesGcm256.cs
deleted file mode 100644
index a2f6409..0000000
--- a/LibHexCryptoStandard/Algoritm/AesGcm256.cs
+++ /dev/null
@@ -1,176 +0,0 @@
-﻿using System;
-using System.Net;
-using System.Runtime.CompilerServices;
-using System.Security;
-using System.Security.Cryptography;
-using System.Text;
-using Org.BouncyCastle.Crypto.Engines;
-using Org.BouncyCastle.Crypto.Modes;
-using Org.BouncyCastle.Crypto.Parameters;
-using Org.BouncyCastle.Security;
-
-namespace LibHexCryptoStandard.Algoritm
-{
-    public class AesGcm256
-    {
-        public static byte[] Key => key;
-
-        public static byte[] Iv => iv;
-
-        private static readonly SecureRandom Random = new SecureRandom();
-        private static byte[] key;
-        private static byte[] iv;
-
-        // Pre-configured Encryption Parameters
-        public static readonly int NonceBitSize = 128;
-        public static readonly int MacBitSize = 128;
-        public static readonly int KeyBitSize = 256;
-
-        private AesGcm256()
-        {
-        }
-
-        /// <summary>
-        /// Initialization function for encrypt/decrypt
-        /// </summary>
-        /// <param name="key">key (hexa format)</param>
-        /// <param name="iv">iv (hexa format)</param>
-        public static void init(string key, string iv)
-        {
-            AesGcm256.key = AesGcm256.HexToByte(key);
-            AesGcm256.iv = AesGcm256.HexToByte(iv);
-        }
-
-        public static byte[] NewKey()
-        {
-            var key = new byte[KeyBitSize / 8];
-            Random.NextBytes(key);
-            return key;
-        }
-
-        public static byte[] NewIv()
-        {
-            var iv = new byte[NonceBitSize / 8];
-            Random.NextBytes(iv);
-            return iv;
-        }
-
-        public static Byte[] HexToByte(string hexStr)
-        {
-            byte[] bArray = new byte[hexStr.Length / 2];
-            for (int i = 0; i < (hexStr.Length / 2); i++)
-            {
-                byte firstNibble = Byte.Parse(hexStr.Substring((2 * i), 1),
-                    System.Globalization.NumberStyles.HexNumber); // [x,y)
-                byte secondNibble = Byte.Parse(hexStr.Substring((2 * i) + 1, 1),
-                    System.Globalization.NumberStyles.HexNumber);
-                int finalByte = (secondNibble) | (firstNibble << 4); // bit-operations 
-                // only with numbers, not bytes.
-                bArray[i] = (byte)finalByte;
-            }
-
-            return bArray;
-        }
-
-        public static string toHex(byte[] data)
-        {
-            string hex = string.Empty;
-            foreach (byte c in data)
-            {
-                hex += c.ToString("X2");
-            }
-
-            return hex;
-        }
-
-        public static string toHex(string asciiString)
-        {
-            string hex = string.Empty;
-            foreach (char c in asciiString)
-            {
-                int tmp = c;
-                hex += string.Format("{0:x2}", System.Convert.ToUInt32(tmp.ToString()));
-            }
-
-            return hex;
-        }
-
-        public static string encrypt(string PlainText, byte[] key, byte[] iv)
-        {
-            string sR = string.Empty;
-            try
-            {
-                byte[] plainBytes = Encoding.UTF8.GetBytes(PlainText);
-
-                GcmBlockCipher cipher = new GcmBlockCipher(new AesFastEngine());
-                AeadParameters parameters =
-                    new AeadParameters(new KeyParameter(key), 128, iv, null);
-
-                cipher.Init(true, parameters);
-
-                byte[] encryptedBytes = new byte[cipher.GetOutputSize(plainBytes.Length)];
-                Int32 retLen = cipher.ProcessBytes
-                    (plainBytes, 0, plainBytes.Length, encryptedBytes, 0);
-                cipher.DoFinal(encryptedBytes, retLen);
-                sR = Convert.ToBase64String(encryptedBytes, Base64FormattingOptions.None);
-            }
-            catch (Exception ex)
-            {
-                Console.WriteLine(ex.Message);
-                Console.WriteLine(ex.StackTrace);
-            }
-
-            return sR;
-        }
-
-        /// <summary>
-        /// Decrypt data with key and IV, which was set by init method<see cref=""/>. If block has non-value, then use Base64 format 
-        /// </summary>
-        /// <param name="EncryptedText">string to decrypt (for Base64 format)</param>
-        /// <param name="block">bytes to decrypt (for Byte format)</param>
-        /// <returns></returns>
-        public static Object decrypt(string EncryptedText/*, byte[] key, byte[] iv*/, byte[] block = null)
-        {
-            string sR = string.Empty;
-            try
-            {
-                byte[] encryptedBytes;
-                if(block == null)
-                {
-                    encryptedBytes = Convert.FromBase64String(EncryptedText);
-                }
-                else
-                {
-                    encryptedBytes = block;
-                }
-
-                GcmBlockCipher cipher = new GcmBlockCipher(new AesFastEngine());
-                AeadParameters parameters =
-                    new AeadParameters(new KeyParameter(key), 128, iv, null);
-                //ParametersWithIV parameters = new ParametersWithIV(new KeyParameter(key), iv);
-
-                cipher.Init(false, parameters);
-                byte[] plainBytes = new byte[cipher.GetOutputSize(encryptedBytes.Length)];
-                Int32 retLen = cipher.ProcessBytes
-                    (encryptedBytes, 0, encryptedBytes.Length, plainBytes, 0);
-                cipher.DoFinal(plainBytes, retLen);
-
-                if (block == null)
-                {
-                    sR = Encoding.UTF8.GetString(plainBytes); //.TrimEnd("\r\n\0".ToCharArray());
-                }
-                else
-                {
-                    return plainBytes;
-                }
-            }
-            catch (Exception ex)
-            {
-                Console.WriteLine(ex.Message);
-                Console.WriteLine(ex.StackTrace);
-            }
-
-            return sR;
-        }
-    }
-}
diff --git a/LibHexCryptoStandard/LibHexCryptoStandard.csproj b/LibHexCryptoStandard/LibHexCryptoStandard.csproj
deleted file mode 100644
index a20e7c6..0000000
--- a/LibHexCryptoStandard/LibHexCryptoStandard.csproj
+++ /dev/null
@@ -1,12 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-
-  <PropertyGroup>
-    <TargetFramework>netstandard2.1</TargetFramework>
-    <Platforms>AnyCPU;x86;x64</Platforms>
-  </PropertyGroup>
-
-  <ItemGroup>
-    <PackageReference Include="Portable.BouncyCastle" Version="1.8.10" />
-  </ItemGroup>
-
-</Project>
diff --git a/LibHexCryptoStandard/Packet/HexNetworkController.cs b/LibHexCryptoStandard/Packet/HexNetworkController.cs
deleted file mode 100644
index de85d8c..0000000
--- a/LibHexCryptoStandard/Packet/HexNetworkController.cs
+++ /dev/null
@@ -1,44 +0,0 @@
-﻿using System;
-using System.Collections.Generic;
-using System.IO;
-using System.Text;
-using System.Threading.Tasks;
-
-namespace LibHexCryptoStandard.Packet
-{
-    public static class HexNetworkController
-    {
-        public static async Task<int> Read(Stream stream, byte[] readBuffer, int offset, bool encryption, bool useBase64, bool output = false)
-        {
-            //0. read data
-            var read = await stream.ReadAsync(readBuffer, offset, readBuffer.Length);
-
-            if(output) Console.WriteLine("Recv(" + read + ")");
-
-            HexPacket hexPacket = null;
-
-            if (!encryption)
-            {
-                return read;
-            }
-
-            //1. get packet
-            hexPacket = HexPacket.GetPacketFromArr(readBuffer, (ushort)offset);
-            //2. decrypt
-            Object decrypted = hexPacket.Decrypt();
-            byte[] toCopy;
-            if (useBase64)
-            {
-                toCopy = Encoding.UTF8.GetBytes((string)decrypted);
-            }
-            else
-            {
-                toCopy = (byte[])decrypted;
-            }
-            //3. copy back to buffer
-            Buffer.BlockCopy(toCopy, 0, readBuffer, offset, (int)hexPacket.DecryptedBytesSize);
-            //4. return of readed
-            return (int)hexPacket.DecryptedBytesSize;
-        }
-    }
-}
diff --git a/LibHexCryptoStandard/Packet/HexPacket.cs b/LibHexCryptoStandard/Packet/HexPacket.cs
deleted file mode 100644
index 1925f8b..0000000
--- a/LibHexCryptoStandard/Packet/HexPacket.cs
+++ /dev/null
@@ -1,166 +0,0 @@
-﻿using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-
-namespace LibHexCryptoStandard.Packet
-{
-    public class HexPacket
-    {
-        private byte[] data_bytes = null;
-        private bool useBase64;
-        private uint decryptedBytesSize = 0;
-        private ushort sizeOfPcktData;
-
-        private static byte[] nullBytesStatic = { 0,0,0,0 };
-
-        public static byte[] GetNull() => nullBytesStatic;
-
-        //Find firs packet and return it
-        public static HexPacket GetPacketFromArr(in byte[] inputBytes, ushort offset = 0, bool useBase64 = false)
-        {
-            //najdi hex packet
-            int start = -1;
-            do
-            {
-                Span<byte> bytes = inputBytes;
-                start = bytes.IndexOf(GetNull());
-                //TODO: Mozno nepotrebne
-                for (var i = 0; i < GetNull().Length; i++)
-                {
-                    if (inputBytes[start + i] == 0) continue;
-                    offset += (ushort) start;
-                    start = -1;
-                }
-            } while (start == -1 && offset < inputBytes.Length);
-            //ak nie je ukonci
-            if (start == -1) throw new PacketException("Packet not found");
-            //ziskaj velkost zasifrovanych dat
-            uint sizeOfData = HexPacket.GetSizeFrom(inputBytes, (ushort)start);
-            //ak nie je velkost/nastala chyba ukonci!
-            if (sizeOfData == 0) throw new PacketException("Packet size is 0");
-            //vytvor nove pole pre paket
-            byte[] pktBytes = new byte[sizeOfData + HexPacket.GetNull().Length + 4];
-            //copy data do neho
-            Buffer.BlockCopy(inputBytes, start, pktBytes, 0, (int)(sizeOfData + HexPacket.GetNull().Length + 4));
-
-            return new HexPacket(pktBytes, useBase64);
-        }
-
-        public static uint GetSizeFrom(in byte[] bytesToFind, in ushort offset = 0, in ushort default_size_bytes = 4)
-        {
-            if(bytesToFind.Length <= 8)
-            {
-                return 0;
-            }  
-            byte[] nullBytes = new byte[4];
-            byte[] sizeBytes = new byte[default_size_bytes];
-            try
-            {
-                Buffer.BlockCopy(bytesToFind, offset, nullBytes, 0, 4);
-                Buffer.BlockCopy(bytesToFind, offset + default_size_bytes, sizeBytes, 0, default_size_bytes);
-            }
-            catch (Exception e)
-            {
-                return 0;
-            }
-            
-            //check null integrity
-            if (nullBytes.Any(b => b != 0))
-            {
-                return 0;
-            }
-            //check size integrity
-            try
-            {
-                var encryptedBytesSize = BitConverter.ToUInt32(sizeBytes, 0);
-                return encryptedBytesSize;
-            }
-            catch (Exception e)
-            {
-                return 0;
-            }
-        }
-
-        public HexPacket(byte[] dataBytes, bool useBase64, ushort sizeOfPcktData = 4)
-        {
-            if (dataBytes.Length <= 8)
-            {
-                throw new PacketException("Bad array struct!");
-            }
-            this.data_bytes = dataBytes;
-            this.sizeOfPcktData = sizeOfPcktData;
-            this.useBase64 = useBase64;
-        }
-
-        public byte[] DataBytes => data_bytes;
-        public uint DecryptedBytesSize => decryptedBytesSize;
-
-        private Object processBytes(ushort offset = 0)
-        {
-            byte[] nullBytes = new byte[4];
-            byte[] sizeBytes = new byte[sizeOfPcktData];
-            byte[] dataBytes = new byte[data_bytes.Length - 4 - sizeOfPcktData];
-            string base64 = null;
-
-            try {
-                Buffer.BlockCopy(data_bytes, offset, nullBytes, 0, 4);
-                Buffer.BlockCopy(data_bytes, offset + 4, sizeBytes, 0, sizeOfPcktData);
-                Buffer.BlockCopy(data_bytes, offset + 4 + sizeOfPcktData, dataBytes, 0, data_bytes.Length - 4 - sizeOfPcktData);
-                if (useBase64)
-                {
-                    base64 = Encoding.UTF8.GetString(dataBytes);
-                }
-            }
-            catch(Exception e)
-            {
-                throw new PacketException("Error with packet data!", e);
-            }
-
-            //check integrity null
-            if (nullBytes.Any(b => b != 0))
-            {
-                throw new PacketException("Bad format(null start)");
-            }
-
-            //check size integrity
-            try
-            {
-                var encryptedBytesSize = BitConverter.ToUInt32(sizeBytes, 0);
-                if (encryptedBytesSize != data_bytes.Length - 4 - sizeOfPcktData)
-                {
-                    throw new Exception("Data length is not correct!");
-                }
-            }
-            catch (Exception e)
-            {
-                throw new PacketException("Size format error!", e);
-            }
-
-            Object decrypted;
-            if (data_bytes != null) //decrypt by bytes
-            {
-                try
-                {
-                    decrypted = useBase64 ? Algoritm.AesGcm256.decrypt(base64) : Algoritm.AesGcm256.decrypt(null, dataBytes);
-                    decryptedBytesSize = (uint) (useBase64 ? ((string) decrypted).Length : ((byte[]) decrypted).Length);
-                }
-                catch (Exception e)
-                {
-                    throw new PacketException("Error with decryption!", e);
-                }}
-            else
-            {
-                throw new PacketException("Error with decrypt data!");
-            }
-
-            return decrypted;
-        }
-
-        public Object Decrypt(ushort offset = 0)
-        {
-            if (data_bytes == null) throw new PacketException("Missing input data");
-            return processBytes(offset);
-        }
-    }
-}
diff --git a/LibHexCryptoStandard/Packet/PacketException.cs b/LibHexCryptoStandard/Packet/PacketException.cs
deleted file mode 100644
index 8cef300..0000000
--- a/LibHexCryptoStandard/Packet/PacketException.cs
+++ /dev/null
@@ -1,26 +0,0 @@
-﻿using System;
-using System.Collections.Generic;
-using System.Runtime.Serialization;
-using System.Text;
-
-namespace LibHexCryptoStandard.Packet
-{
-    public class PacketException : Exception
-    {
-        public PacketException()
-        {
-        }
-
-        protected PacketException(SerializationInfo info, StreamingContext context) : base(info, context)
-        {
-        }
-
-        public PacketException(string message) : base(message)
-        {
-        }
-
-        public PacketException(string message, Exception innerException) : base(message, innerException)
-        {
-        }
-    }
-}
diff --git a/LibUIAcademyFramework/LibUIAcademyFramework.csproj b/LibUIAcademyFramework/LibUIAcademyFramework.csproj
index d5a1e16..8be5622 100644
--- a/LibUIAcademyFramework/LibUIAcademyFramework.csproj
+++ b/LibUIAcademyFramework/LibUIAcademyFramework.csproj
@@ -30,42 +30,6 @@
     <ErrorReport>prompt</ErrorReport>
     <WarningLevel>4</WarningLevel>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
-    <DebugSymbols>true</DebugSymbols>
-    <OutputPath>bin\x86\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE</DefineConstants>
-    <DebugType>full</DebugType>
-    <PlatformTarget>x86</PlatformTarget>
-    <LangVersion>7.3</LangVersion>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
-    <OutputPath>bin\x86\Release\</OutputPath>
-    <DefineConstants>TRACE</DefineConstants>
-    <Optimize>true</Optimize>
-    <DebugType>pdbonly</DebugType>
-    <PlatformTarget>x86</PlatformTarget>
-    <LangVersion>7.3</LangVersion>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
-    <DebugSymbols>true</DebugSymbols>
-    <OutputPath>bin\x64\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE</DefineConstants>
-    <DebugType>full</DebugType>
-    <PlatformTarget>x64</PlatformTarget>
-    <LangVersion>7.3</LangVersion>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
-    <OutputPath>bin\x64\Release\</OutputPath>
-    <DefineConstants>TRACE</DefineConstants>
-    <Optimize>true</Optimize>
-    <DebugType>pdbonly</DebugType>
-    <PlatformTarget>x64</PlatformTarget>
-    <LangVersion>7.3</LangVersion>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
   <ItemGroup>
     <Reference Include="System" />
     <Reference Include="System.Core" />
diff --git a/MeetingClient.sln b/MeetingClient.sln
index 0d6663e..c44869a 100644
--- a/MeetingClient.sln
+++ b/MeetingClient.sln
@@ -21,10 +21,6 @@ Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "LibHexCrypto", "LibHexCrypt
 EndProject
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "MeetingPlayerRepair", "MeetingPlayerRepair\MeetingPlayerRepair.csproj", "{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}"
 EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "LibHexCryptoStandard", "LibHexCryptoStandard\LibHexCryptoStandard.csproj", "{9FBF883F-31C2-4F35-9038-95D52708494F}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "TestNet5compability", "TestNet5compability\TestNet5compability.csproj", "{FEEE7640-351C-4316-BFF2-201786836369}"
-EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Any CPU = Debug|Any CPU
@@ -40,8 +36,8 @@ Global
 	GlobalSection(ProjectConfigurationPlatforms) = postSolution
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|Any CPU.ActiveCfg = Debug|x86
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|Any CPU.Build.0 = Debug|x86
-		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|x64.ActiveCfg = Debug|x64
-		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|x64.Build.0 = Debug|x64
+		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|x64.Build.0 = Debug|Any CPU
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|x86.ActiveCfg = Debug|x86
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Debug|x86.Build.0 = Debug|x86
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Publish|Any CPU.ActiveCfg = Debug|Any CPU
@@ -52,8 +48,8 @@ Global
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Publish|x86.Build.0 = Debug|Any CPU
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|Any CPU.ActiveCfg = Release|Any CPU
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|Any CPU.Build.0 = Release|Any CPU
-		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|x64.ActiveCfg = Release|x64
-		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|x64.Build.0 = Release|x64
+		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|x64.ActiveCfg = Release|Any CPU
+		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|x64.Build.0 = Release|Any CPU
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|x86.ActiveCfg = Release|x86
 		{B48B7672-9F1F-48EB-8586-F16F1AE2650C}.Release|x86.Build.0 = Release|x86
 		{B5B6044E-96D4-41BE-AB11-3E6CD1BF1ED1}.Debug|Any CPU.ActiveCfg = Debug|x86
@@ -129,8 +125,7 @@ Global
 		{40493D0C-21B8-4357-AE75-D7637B3FC223}.Release|x86.Build.0 = Release|x86
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|Any CPU.ActiveCfg = Debug|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|Any CPU.Build.0 = Debug|Win32
-		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|x64.ActiveCfg = Debug|x64
-		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|x64.Build.0 = Debug|x64
+		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|x64.ActiveCfg = Debug|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|x86.ActiveCfg = Debug|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Debug|x86.Build.0 = Debug|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Publish|Any CPU.ActiveCfg = Debug|Win32
@@ -140,16 +135,15 @@ Global
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Publish|x86.ActiveCfg = Debug|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Publish|x86.Build.0 = Debug|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Release|Any CPU.ActiveCfg = Release|Win32
-		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Release|x64.ActiveCfg = Release|x64
-		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Release|x64.Build.0 = Release|x64
+		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Release|x64.ActiveCfg = Release|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Release|x86.ActiveCfg = Release|Win32
 		{77F4AAA4-0051-480A-9168-A6CB8927FB6E}.Release|x86.Build.0 = Release|Win32
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x64.ActiveCfg = Debug|x64
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x64.Build.0 = Debug|x64
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x86.ActiveCfg = Debug|x86
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x86.Build.0 = Debug|x86
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x64.Build.0 = Debug|Any CPU
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Debug|x86.Build.0 = Debug|Any CPU
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Publish|Any CPU.ActiveCfg = Debug|Any CPU
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Publish|Any CPU.Build.0 = Debug|Any CPU
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Publish|x64.ActiveCfg = Debug|Any CPU
@@ -158,16 +152,16 @@ Global
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Publish|x86.Build.0 = Debug|Any CPU
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|Any CPU.ActiveCfg = Release|Any CPU
 		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|Any CPU.Build.0 = Release|Any CPU
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x64.ActiveCfg = Release|x64
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x64.Build.0 = Release|x64
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x86.ActiveCfg = Release|x86
-		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x86.Build.0 = Release|x86
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x64.ActiveCfg = Release|Any CPU
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x64.Build.0 = Release|Any CPU
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x86.ActiveCfg = Release|Any CPU
+		{969C37D6-030D-4D63-82B7-2EF7077BFCA0}.Release|x86.Build.0 = Release|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x64.ActiveCfg = Debug|x64
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x64.Build.0 = Debug|x64
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x86.ActiveCfg = Debug|x86
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x86.Build.0 = Debug|x86
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x64.Build.0 = Debug|Any CPU
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Debug|x86.Build.0 = Debug|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Publish|Any CPU.ActiveCfg = Debug|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Publish|Any CPU.Build.0 = Debug|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Publish|x64.ActiveCfg = Debug|Any CPU
@@ -176,16 +170,16 @@ Global
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Publish|x86.Build.0 = Debug|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|Any CPU.ActiveCfg = Release|Any CPU
 		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|Any CPU.Build.0 = Release|Any CPU
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x64.ActiveCfg = Release|x64
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x64.Build.0 = Release|x64
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x86.ActiveCfg = Release|x86
-		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x86.Build.0 = Release|x86
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x64.ActiveCfg = Release|Any CPU
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x64.Build.0 = Release|Any CPU
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x86.ActiveCfg = Release|Any CPU
+		{4DCD7EE5-BA05-479A-97B3-664F00A4108F}.Release|x86.Build.0 = Release|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x64.ActiveCfg = Debug|x64
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x64.Build.0 = Debug|x64
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x86.ActiveCfg = Debug|x86
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x86.Build.0 = Debug|x86
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x64.Build.0 = Debug|Any CPU
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Debug|x86.Build.0 = Debug|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Publish|Any CPU.ActiveCfg = Debug|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Publish|Any CPU.Build.0 = Debug|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Publish|x64.ActiveCfg = Debug|Any CPU
@@ -194,46 +188,10 @@ Global
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Publish|x86.Build.0 = Debug|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|Any CPU.ActiveCfg = Release|Any CPU
 		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|Any CPU.Build.0 = Release|Any CPU
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x64.ActiveCfg = Release|x64
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x64.Build.0 = Release|x64
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x86.ActiveCfg = Release|x86
-		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x86.Build.0 = Release|x86
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Debug|x64.ActiveCfg = Debug|x64
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Debug|x64.Build.0 = Debug|x64
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Debug|x86.ActiveCfg = Debug|x86
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Debug|x86.Build.0 = Debug|x86
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Publish|Any CPU.ActiveCfg = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Publish|Any CPU.Build.0 = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Publish|x64.ActiveCfg = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Publish|x64.Build.0 = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Publish|x86.ActiveCfg = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Publish|x86.Build.0 = Debug|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Release|Any CPU.Build.0 = Release|Any CPU
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Release|x64.ActiveCfg = Release|x64
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Release|x64.Build.0 = Release|x64
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Release|x86.ActiveCfg = Release|x86
-		{9FBF883F-31C2-4F35-9038-95D52708494F}.Release|x86.Build.0 = Release|x86
-		{FEEE7640-351C-4316-BFF2-201786836369}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Debug|x64.ActiveCfg = Debug|x64
-		{FEEE7640-351C-4316-BFF2-201786836369}.Debug|x64.Build.0 = Debug|x64
-		{FEEE7640-351C-4316-BFF2-201786836369}.Debug|x86.ActiveCfg = Debug|x86
-		{FEEE7640-351C-4316-BFF2-201786836369}.Debug|x86.Build.0 = Debug|x86
-		{FEEE7640-351C-4316-BFF2-201786836369}.Publish|Any CPU.ActiveCfg = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Publish|Any CPU.Build.0 = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Publish|x64.ActiveCfg = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Publish|x64.Build.0 = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Publish|x86.ActiveCfg = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Publish|x86.Build.0 = Debug|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Release|Any CPU.Build.0 = Release|Any CPU
-		{FEEE7640-351C-4316-BFF2-201786836369}.Release|x64.ActiveCfg = Release|x64
-		{FEEE7640-351C-4316-BFF2-201786836369}.Release|x64.Build.0 = Release|x64
-		{FEEE7640-351C-4316-BFF2-201786836369}.Release|x86.ActiveCfg = Release|x86
-		{FEEE7640-351C-4316-BFF2-201786836369}.Release|x86.Build.0 = Release|x86
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x64.ActiveCfg = Release|Any CPU
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x64.Build.0 = Release|Any CPU
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x86.ActiveCfg = Release|Any CPU
+		{EF5F64D5-F716-48DD-9CC8-D71EBDCDE22B}.Release|x86.Build.0 = Release|Any CPU
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
diff --git a/MeetingPlayerRepair/MeetingPlayerRepair.csproj b/MeetingPlayerRepair/MeetingPlayerRepair.csproj
index 923b507..7d7118c 100644
--- a/MeetingPlayerRepair/MeetingPlayerRepair.csproj
+++ b/MeetingPlayerRepair/MeetingPlayerRepair.csproj
@@ -5,21 +5,12 @@
     <TargetFramework>net5.0</TargetFramework>
     <SignAssembly>false</SignAssembly>
     <ApplicationManifest>app.manifest</ApplicationManifest>
-    <Platforms>AnyCPU;x86;x64</Platforms>
   </PropertyGroup>
 
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
     <OutputPath>D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\RtspClientSharp\SimpleRtspPlayer\bin\</OutputPath>
   </PropertyGroup>
 
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <OutputPath>D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\RtspClientSharp\SimpleRtspPlayer\bin\</OutputPath>
-  </PropertyGroup>
-
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
-    <OutputPath>D:\User\Desktop\Skola\Bakalarka\Projekt\moje\MeetingClient\RtspClientSharp\SimpleRtspPlayer\bin\</OutputPath>
-  </PropertyGroup>
-
   <ItemGroup>
     <ProjectReference Include="..\RtspClientSharp\SimpleRtspPlayer\SimpleRtspPlayer.csproj" />
   </ItemGroup>
diff --git a/RtspClientSharp/RtspClientSharp/ConnectionParameters.cs b/RtspClientSharp/RtspClientSharp/ConnectionParameters.cs
index 89bcc5a..57a4319 100644
--- a/RtspClientSharp/RtspClientSharp/ConnectionParameters.cs
+++ b/RtspClientSharp/RtspClientSharp/ConnectionParameters.cs
@@ -28,12 +28,6 @@ namespace RtspClientSharp
         public string UserAgent { get; set; } = DefaultUserAgent;
         public RtpTransportProtocol RtpTransport { get; set; } = RtpTransportProtocol.TCP;
 
-        //Pridane
-        //Spustit desifrovanie/sifrovanie
-        public bool Enryption { get; set; } = false;
-        //Pouzit Base64 desifrovanie/sifrovanie
-        public bool UseBase64 { get; set; } = false;
-
         public ConnectionParameters(Uri connectionUri)
         {
             ValidateUri(connectionUri);
diff --git a/RtspClientSharp/RtspClientSharp/Hex/Global.cs b/RtspClientSharp/RtspClientSharp/Hex/Global.cs
deleted file mode 100644
index 9c4b435..0000000
--- a/RtspClientSharp/RtspClientSharp/Hex/Global.cs
+++ /dev/null
@@ -1,12 +0,0 @@
-﻿using System;
-using System.Collections.Generic;
-using System.Text;
-
-namespace LibRtspClientSharp.Hex
-{
-    public static class Global
-    {
-        public static readonly bool strictPrint = false;
-        public static readonly bool onlyFrames = true;
-    }
-}
diff --git a/RtspClientSharp/RtspClientSharp/LibRtspClientSharp.csproj b/RtspClientSharp/RtspClientSharp/LibRtspClientSharp.csproj
index 433f088..d842f48 100644
--- a/RtspClientSharp/RtspClientSharp/LibRtspClientSharp.csproj
+++ b/RtspClientSharp/RtspClientSharp/LibRtspClientSharp.csproj
@@ -1,7 +1,7 @@
 <Project Sdk="Microsoft.NET.Sdk">
 
   <PropertyGroup>
-    <TargetFramework>netstandard2.1</TargetFramework>
+    <TargetFramework>netstandard2.0</TargetFramework>
     <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
     <Authors>Kirill Bogdanov</Authors>
     <RepositoryUrl>https://github.com/BogdanovKirill/RtspClientSharp</RepositoryUrl>
@@ -54,8 +54,4 @@ More info: https://github.com/BogdanovKirill/RtspClientSharp/issues/49</PackageR
     <DocumentationFile>bin\Release\netstandard2.0\RtspClientSharp.xml</DocumentationFile>
   </PropertyGroup>
 
-  <ItemGroup>
-    <ProjectReference Include="..\..\LibHexCryptoStandard\LibHexCryptoStandard.csproj" />
-  </ItemGroup>
-
 </Project>
diff --git a/RtspClientSharp/RtspClientSharp/Rtsp/RtspClientInternal.cs b/RtspClientSharp/RtspClientSharp/Rtsp/RtspClientInternal.cs
index 26760c6..aebc328 100644
--- a/RtspClientSharp/RtspClientSharp/Rtsp/RtspClientInternal.cs
+++ b/RtspClientSharp/RtspClientSharp/Rtsp/RtspClientInternal.cs
@@ -6,14 +6,8 @@ using System.IO;
 using System.Linq;
 using System.Net;
 using System.Net.Sockets;
-using System.Runtime.InteropServices;
-using System.Text;
 using System.Threading;
 using System.Threading.Tasks;
-using LibHexCryptoStandard.Algoritm;
-using LibHexCryptoStandard.Packet;
-using LibRtspClientSharp.Hex;
-using Org.BouncyCastle.Asn1.Cmp;
 using RtspClientSharp.Codecs.Audio;
 using RtspClientSharp.Codecs.Video;
 using RtspClientSharp.MediaParsers;
@@ -66,23 +60,19 @@ namespace RtspClientSharp.Rtsp
             _requestMessageFactory = new RtspRequestMessageFactory(fixedRtspUri, connectionParameters.UserAgent);
         }
 
-        //TODO: preverit ako funguje
         public async Task ConnectAsync(CancellationToken token)
         {
-            //cseq 1
             IRtspTransportClient rtspTransportClient = _transportClientProvider();
             Volatile.Write(ref _rtspTransportClient, rtspTransportClient);
 
             await _rtspTransportClient.ConnectAsync(token);
 
-            //cseq 2
             RtspRequestMessage optionsRequest = _requestMessageFactory.CreateOptionsRequest();
             RtspResponseMessage optionsResponse = await _rtspTransportClient.ExecuteRequest(optionsRequest, token);
 
             if (optionsResponse.StatusCode == RtspStatusCode.Ok)
                 ParsePublicHeader(optionsResponse.Headers[WellKnownHeaders.Public]);
 
-            //cseq 3
             RtspRequestMessage describeRequest = _requestMessageFactory.CreateDescribeRequest();
             RtspResponseMessage describeResponse =
                 await _rtspTransportClient.EnsureExecuteRequest(describeRequest, token);
@@ -105,12 +95,10 @@ namespace RtspClientSharp.Rtsp
             if (!anyTrackRequested)
                 throw new RtspClientException("Any suitable track is not found");
 
-            //cseq 5
             RtspRequestMessage playRequest = _requestMessageFactory.CreatePlayRequest();
             await _rtspTransportClient.EnsureExecuteRequest(playRequest, token, 1);
         }
 
-        //Prijem dat
         public async Task ReceiveAsync(CancellationToken token)
         {
             if (_rtspTransportClient == null)
@@ -497,9 +485,10 @@ namespace RtspClientSharp.Rtsp
             }
         }
 
+        //TODO: find RICEVE
         private async Task ReceiveOverTcpAsync(Stream rtspStream, CancellationToken token)
         {
-            _tpktStream = new TpktStream(rtspStream, _connectionParameters);
+            _tpktStream = new TpktStream(rtspStream);
 
             int nextRtcpReportInterval = GetNextRtcpReportIntervalMs();
             int lastTimeRtcpReportsSent = Environment.TickCount;
@@ -572,15 +561,10 @@ namespace RtspClientSharp.Rtsp
 
             while (!token.IsCancellationRequested)
             {
+                //TODO: UDP DATA
                 int read = await client.ReceiveAsync(bufferSegment, SocketFlags.None);
-                byte[] toProcess = null;
-                HexPacket hexPacket = null;
 
-                DecryptData(read, bufferSegment, ref hexPacket, ref toProcess);
-
-                var payloadSegment = hexPacket != null
-                    ? new ArraySegment<byte>(toProcess, 0, (int)hexPacket.DecryptedBytesSize)
-                    : new ArraySegment<byte>(readBuffer, 0, read);
+                var payloadSegment = new ArraySegment<byte>(readBuffer, 0, read);
                 rtpStream.Process(payloadSegment);
 
                 int ticksNow = Environment.TickCount;
@@ -606,6 +590,7 @@ namespace RtspClientSharp.Rtsp
 
             while (!token.IsCancellationRequested)
             {
+                //TODO: UDP CONTROL
                 int read = await client.ReceiveAsync(bufferSegment, SocketFlags.None);
 
                 var payloadSegment = new ArraySegment<byte>(readBuffer, 0, read);
@@ -623,35 +608,5 @@ namespace RtspClientSharp.Rtsp
             byte[] streamBuffer = bufferStream.GetBuffer();
             return new ArraySegment<byte>(streamBuffer, 0, (int)bufferStream.Position);
         }
-
-        private void DecryptData(in int read, in ArraySegment<byte> bufferSegment, ref HexPacket hexPacket, ref byte[] toProcess)
-        {
-            //Vypis
-            if (_connectionParameters.UseBase64 && Global.strictPrint)
-            {
-                Console.WriteLine("Recv(" + read + "):" + Encoding.UTF8.GetString(bufferSegment.Array, 0, read));
-            }
-            else
-            {
-                if (!Global.onlyFrames)
-                {
-                    Console.WriteLine("Recv(" + read + ")");
-                }
-            }
-
-            //desifrovanie
-            if (!_connectionParameters.Enryption || read <= 8) return;
-            var toDecryptBytes = new byte[read];
-            Buffer.BlockCopy(bufferSegment.Array, 0, toDecryptBytes, 0, read);
-            hexPacket = new HexPacket(toDecryptBytes, _connectionParameters.UseBase64);
-            if (_connectionParameters.UseBase64)
-            {
-                toProcess = Encoding.UTF8.GetBytes((string)hexPacket.Decrypt());
-            }
-            else
-            {
-                toProcess = (byte[])hexPacket.Decrypt();
-            }
-        }
     }
 }
\ No newline at end of file
diff --git a/RtspClientSharp/RtspClientSharp/Rtsp/RtspTcpTransportClient.cs b/RtspClientSharp/RtspClientSharp/Rtsp/RtspTcpTransportClient.cs
index 244cd35..d225e1a 100644
--- a/RtspClientSharp/RtspClientSharp/Rtsp/RtspTcpTransportClient.cs
+++ b/RtspClientSharp/RtspClientSharp/Rtsp/RtspTcpTransportClient.cs
@@ -3,10 +3,8 @@ using System.Diagnostics;
 using System.IO;
 using System.Net;
 using System.Net.Sockets;
-using System.Text;
 using System.Threading;
 using System.Threading.Tasks;
-using LibRtspClientSharp.Hex;
 using RtspClientSharp.Utils;
 
 namespace RtspClientSharp.Rtsp
@@ -55,18 +53,9 @@ namespace RtspClientSharp.Rtsp
             _tcpClient?.Close();
         }
 
-        //TODO: sending
         protected override Task WriteAsync(byte[] buffer, int offset, int count)
         {
             Debug.Assert(_networkStream != null, "_networkStream != null");
-            if(Global.strictPrint)
-            {
-                Console.WriteLine("Send(" + count + "):" + Encoding.UTF8.GetString(buffer, offset, count));
-            }
-            else
-            {
-                Console.WriteLine("Send(" + count + ")");
-            }
             return _networkStream.WriteAsync(buffer, offset, count);
         }
 
diff --git a/RtspClientSharp/RtspClientSharp/Rtsp/RtspTransportClient.cs b/RtspClientSharp/RtspClientSharp/Rtsp/RtspTransportClient.cs
index 9b55095..f8f6ee4 100644
--- a/RtspClientSharp/RtspClientSharp/Rtsp/RtspTransportClient.cs
+++ b/RtspClientSharp/RtspClientSharp/Rtsp/RtspTransportClient.cs
@@ -1,15 +1,9 @@
 ﻿using System;
-using System.Collections.Specialized;
 using System.IO;
-using System.Linq;
 using System.Net;
-using System.Security.Cryptography;
 using System.Text;
 using System.Threading;
 using System.Threading.Tasks;
-using LibHexCryptoStandard.Algoritm;
-using LibHexCryptoStandard.Packet;
-using LibRtspClientSharp.Hex;
 using RtspClientSharp.Rtsp.Authentication;
 using RtspClientSharp.Utils;
 
@@ -86,7 +80,6 @@ namespace RtspClientSharp.Rtsp
 
             string requestMessageString = requestMessage.ToString();
 
-            //TODO: pozri to tu tiez
             int written = Encoding.ASCII.GetBytes(requestMessageString, 0, requestMessageString.Length, _buffer, 0);
             return WriteAsync(_buffer, 0, written);
         }
@@ -96,7 +89,7 @@ namespace RtspClientSharp.Rtsp
         protected abstract Task WriteAsync(byte[] buffer, int offset, int count);
         protected abstract Task<int> ReadAsync(byte[] buffer, int offset, int count);
         protected abstract Task ReadExactAsync(byte[] buffer, int offset, int count);
-        
+
         private async Task<RtspResponseMessage> GetResponseAsync(int responseReadPortionSize = 0)
         {
             int totalRead = await ReadUntilEndOfHeadersAsync(responseReadPortionSize);
@@ -139,32 +132,10 @@ namespace RtspClientSharp.Rtsp
             return rtspResponseMessage;
         }
 
-        //switch decrypt --------------------------------------------------------------------------
-        private ushort len_bytes = 4;
-        
-        private void correctRead(ref int read, ref int totalRead, ref int offset, in int decrypted)
-        {
-            if(read > 1)
-            {
-                totalRead -= read;
-                read = decrypted;
-                totalRead += read;
-            }
-            else
-            {
-                read = decrypted;
-                totalRead = read;
-                offset = totalRead;
-            }
-        }
-
         private async Task<int> ReadUntilEndOfHeadersAsync(int readPortionSize = 0)
         {
             int offset = 0;
 
-            bool readNew = true;
-            uint readNeeded = 0;
-
             int endOfHeaders;
             int totalRead = 0;
 
@@ -178,83 +149,25 @@ namespace RtspClientSharp.Rtsp
                 if (count == 0)
                     throw new RtspBadResponseException(
                         $"Response is too large (> {Constants.MaxResponseHeadersSize / 1024} KB)");
-                
+
                 int read = await ReadAsync(_buffer, offset, count);
 
-                //kontrola existencie streamu
                 if (read == 0)
                     throw new EndOfStreamException("End of rtsp stream");
 
                 totalRead += read;
 
-                //Vypis prijatych dat
-                if(ConnectionParameters.UseBase64 && Global.strictPrint)
-                {
-                    Console.WriteLine("Recv(" + read + "):" + Encoding.UTF8.GetString(_buffer, offset, count));
-                }
-                else
-                {
-                    Console.WriteLine("Recv(" + read + ")");
-                }
-
-                //Ziskanie Hpaketu
-                if ((read > 8 || totalRead >= 8) && readNew && ConnectionParameters.Enryption)
-                {
-                    //TODO: check if is first 4 null
-                    byte[] lenBytes = new byte[4];
-                    lenBytes = _buffer.Skip(4).Take(len_bytes).ToArray();
-                    readNeeded = BitConverter.ToUInt32(lenBytes, 0);
-
-                    readNew = false;
-                }
-
-                var pktSize = totalRead - 4 - len_bytes;
-
-                //Desifrovanie
-                if ((pktSize == readNeeded/* || totalRead == readNeeded*/) && ConnectionParameters.Enryption && !readNew)
-                {
-                    Console.WriteLine("RecvTotal(" + pktSize + ")");
-
-                    byte[] toDecrypt = new byte[totalRead];
-                    Buffer.BlockCopy(_buffer, 0, toDecrypt, 0, totalRead);
-                    HexPacket hexPacket = new HexPacket(toDecrypt, ConnectionParameters.UseBase64);
-
-                    //TODO: zmensit kod
-                    if (ConnectionParameters.UseBase64)
-                    {//USE BASE 64 decryption
-                        string decrypted = (string)hexPacket.Decrypt();
-                        //clear default buffer
-                        Array.Clear(_buffer, 0, totalRead);
-                        //convert to byte array
-                        var tmp = Encoding.UTF8.GetBytes(decrypted);
-                        //Copy back to buffer
-                        Buffer.BlockCopy(tmp, 0, _buffer, 0, decrypted.Length);
-                        //Correct read sizes
-                        correctRead(ref read, ref totalRead, ref offset, decrypted.Length);
-                    }
-                    else //if (ConnectionParameters.UseBase64)
-                    {//USE BYTE DECRYPTION
-                        
-                        byte[] decrypted = (byte[])hexPacket.Decrypt();
-                        //clear default buffer
-                        Array.Clear(_buffer, 0, totalRead);
-                        //Copy back to buffer
-                        Buffer.BlockCopy(decrypted, 0, _buffer, 0, decrypted.Length);
-                        //Correct read sizes
-                        correctRead(ref read, ref totalRead, ref offset, decrypted.Length);
-                    }
-                }
-
-                int startIndex = offset - (Constants.DoubleCrlfBytes.Length);
+                int startIndex = offset - (Constants.DoubleCrlfBytes.Length - 1);
 
                 if (startIndex < 0)
                     startIndex = 0;
-                
+
                 endOfHeaders = ArrayUtils.IndexOfBytes(_buffer, Constants.DoubleCrlfBytes, startIndex,
                     totalRead - startIndex);
 
                 offset += read;
             } while (endOfHeaders == -1);
+
             return totalRead;
         }
 
diff --git a/RtspClientSharp/RtspClientSharp/Tpkt/TpktStream.cs b/RtspClientSharp/RtspClientSharp/Tpkt/TpktStream.cs
index be9f9e9..4aca020 100644
--- a/RtspClientSharp/RtspClientSharp/Tpkt/TpktStream.cs
+++ b/RtspClientSharp/RtspClientSharp/Tpkt/TpktStream.cs
@@ -2,9 +2,7 @@
 using System.Diagnostics;
 using System.IO;
 using System.Runtime.CompilerServices;
-using System.Text;
 using System.Threading.Tasks;
-using LibHexCryptoStandard.Packet;
 using RtspClientSharp.Utils;
 
 namespace RtspClientSharp.Tpkt
@@ -21,12 +19,9 @@ namespace RtspClientSharp.Tpkt
 
         private readonly Stream _stream;
 
-        private readonly ConnectionParameters _conParam;
-
-        public TpktStream(Stream stream, ConnectionParameters cparam)
+        public TpktStream(Stream stream)
         {
             _stream = stream ?? throw new ArgumentNullException(nameof(stream));
-            _conParam = cparam ?? throw new ArgumentNullException(nameof(cparam));
         }
 
         public async Task<TpktPayload> ReadAsync()
@@ -101,12 +96,11 @@ namespace RtspClientSharp.Tpkt
         {
             if (_nonParsedDataSize != 0)
                 Buffer.BlockCopy(_readBuffer, _nonParsedDataOffset, _readBuffer, 0, _nonParsedDataSize);
-            
+
             int packetPosition;
             while ((packetPosition = FindTpktSignature(_nonParsedDataSize)) == -1)
             {
-                _nonParsedDataSize = await HexNetworkController.Read(_stream, _readBuffer, 0, _conParam.Enryption, _conParam.UseBase64);
-                //_nonParsedDataSize = await _stream.ReadAsync(_readBuffer, 0, _readBuffer.Length);
+                _nonParsedDataSize = await _stream.ReadAsync(_readBuffer, 0, _readBuffer.Length);
 
                 if (_nonParsedDataSize == 0)
                     throw new EndOfStreamException("End of TPKT stream");
diff --git a/RtspClientSharp/RtspClientSharp/Utils/StreamExtensions.cs b/RtspClientSharp/RtspClientSharp/Utils/StreamExtensions.cs
index 0127bef..883e4ce 100644
--- a/RtspClientSharp/RtspClientSharp/Utils/StreamExtensions.cs
+++ b/RtspClientSharp/RtspClientSharp/Utils/StreamExtensions.cs
@@ -1,14 +1,11 @@
-﻿using System;
-using System.IO;
-using System.Text;
+﻿using System.IO;
 using System.Threading.Tasks;
-using LibHexCryptoStandard.Packet;
 
 namespace RtspClientSharp.Utils
 {
     static class StreamExtensions
     {
-        public static async Task ReadExactAsync(this Stream stream, byte[] buffer, int offset, int count, bool decrypt = true, bool useBase64 = false)
+        public static async Task ReadExactAsync(this Stream stream, byte[] buffer, int offset, int count)
         {
             if (count == 0)
                 return;
@@ -20,50 +17,8 @@ namespace RtspClientSharp.Utils
                 if (read == 0)
                     throw new EndOfStreamException();
 
-                //TODO: presun na HexNetworkController
-
-                if (decrypt)
-                {
-                    int offOfHPkt = -1;
-                    int offsetToPass = 0;
-                    do
-                    {
-                        //najdi hex packet
-                        offOfHPkt = ArrayUtils.IndexOfBytes(buffer, HexPacket.GetNull(), offset + offsetToPass,
-                            HexPacket.GetNull().Length);
-                        //ak nie je ukonci
-                        if (offOfHPkt == -1) break;
-                        //ziskaj velkost zasifrovanych dat
-                        uint sizeOfData = HexPacket.GetSizeFrom(buffer, (ushort) offOfHPkt);
-                        //ak nie je velkost/nastala chyba ukonci!
-                        if (sizeOfData == 0) break;
-                        //vytvor nove pole pre paket
-                        byte[] pktBytes = new byte[sizeOfData + HexPacket.GetNull().Length + 4];
-                        //copy data do neho
-                        Buffer.BlockCopy(buffer, offOfHPkt, pktBytes, 0, (int) (sizeOfData + 4 + 4));
-
-                        HexPacket hexPacket = new HexPacket(pktBytes, useBase64);
-                        Object decryptedObj = hexPacket.Decrypt();
-                        if (decryptedObj == null) break;
-                        byte[] toCopy;
-                        if (useBase64)
-                        {
-                            string base64 = (string)decryptedObj;
-                            toCopy = Encoding.UTF8.GetBytes(base64);
-                        }
-                        else
-                        {
-                            toCopy = (byte[])decryptedObj;
-                        }
-
-                        Buffer.BlockCopy(toCopy, 0, buffer, offOfHPkt, toCopy.Length);
-                    } while (true);
-                }
-                else
-                {
-                    count -= read;
-                    offset += read;
-                }
+                count -= read;
+                offset += read;
             } while (count != 0);
         }
     }
diff --git a/RtspClientSharp/SimpleRtspClient/App.config b/RtspClientSharp/SimpleRtspClient/App.config
index c0c3aed..56f623a 100644
--- a/RtspClientSharp/SimpleRtspClient/App.config
+++ b/RtspClientSharp/SimpleRtspClient/App.config
@@ -1,6 +1,7 @@
-<?xml version="1.0" encoding="utf-8"?>
+﻿<?xml version="1.0" encoding="utf-8"?>
+
 <configuration>
   <startup>
-    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
+    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.1" />
   </startup>
-</configuration>
+</configuration>
\ No newline at end of file
diff --git a/RtspClientSharp/SimpleRtspClient/Program.cs b/RtspClientSharp/SimpleRtspClient/Program.cs
index af2b3f0..41d88b9 100644
--- a/RtspClientSharp/SimpleRtspClient/Program.cs
+++ b/RtspClientSharp/SimpleRtspClient/Program.cs
@@ -11,15 +11,12 @@ namespace SimpleRtspClient
     {
         static void Main()
         {
-            var serverUri = new Uri("rtsp://127.0.0.1:8554/live");
+            var serverUri = new Uri("rtsp://192.168.1.77:554/ucast/11");
             var credentials = new NetworkCredential("admin", "123456");
 
             var connectionParameters = new ConnectionParameters(serverUri, credentials);
             var cancellationTokenSource = new CancellationTokenSource();
 
-            Console.WriteLine("Press any key to connect");
-            Console.ReadLine();
-
             Task connectTask = ConnectAsync(connectionParameters, cancellationTokenSource.Token);
 
             Console.WriteLine("Press any key to cancel");
@@ -35,16 +32,12 @@ namespace SimpleRtspClient
         {
             try
             {
-                TimeSpan delay = TimeSpan.FromSeconds(1000);
+                TimeSpan delay = TimeSpan.FromSeconds(5);
 
                 using (var rtspClient = new RtspClient(connectionParameters))
                 {
                     rtspClient.FrameReceived +=
-                        (sender, frame) =>
-                        {
-                            Console.WriteLine(
-                                $"New frame {frame.Timestamp}: {frame.GetType().Name} - {frame.FrameSegment.Count}");
-                        };
+                        (sender, frame) => Console.WriteLine($"New frame {frame.Timestamp}: {frame.GetType().Name}");
 
                     while (true)
                     {
diff --git a/RtspClientSharp/SimpleRtspClient/SimpleRtspClient.csproj b/RtspClientSharp/SimpleRtspClient/SimpleRtspClient.csproj
index b908b44..1acb4f6 100644
--- a/RtspClientSharp/SimpleRtspClient/SimpleRtspClient.csproj
+++ b/RtspClientSharp/SimpleRtspClient/SimpleRtspClient.csproj
@@ -8,7 +8,7 @@
     <OutputType>Exe</OutputType>
     <RootNamespace>SimpleRtspClient</RootNamespace>
     <AssemblyName>SimpleRtspClient</AssemblyName>
-    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
+    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>
     <FileAlignment>512</FileAlignment>
     <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
     <TargetFrameworkProfile />
diff --git a/TestNet5compability/Program.cs b/TestNet5compability/Program.cs
deleted file mode 100644
index ca38dfe..0000000
--- a/TestNet5compability/Program.cs
+++ /dev/null
@@ -1,111 +0,0 @@
-﻿using System;
-using System.Net;
-using System.Threading;
-using System.Threading.Tasks;
-using LibHexCryptoStandard.Algoritm;
-using RtspClientSharp;
-using RtspClientSharp.Rtsp;
-
-namespace TestNet5compability
-{
-    class Program
-    {
-        static void Main()
-        {
-            string statickey = "2192B39425BBD08B6E8E61C5D1F1BC9F428FC569FBC6F78C0BC48FCCDB0F42AE";
-            string staticiv = "E1E592E87225847C11D948684F3B070D";
-            LibHexCryptoStandard.Algoritm.AesGcm256.init(statickey, staticiv);
-
-            var serverUri = new Uri("rtsp://127.0.0.1:8554/live");
-            var credentials = new NetworkCredential("admin", "123456");
-
-            var connectionParameters = new ConnectionParameters(serverUri, credentials);
-            var cancellationTokenSource = new CancellationTokenSource();
-
-            Console.WriteLine("Press any key to connect");
-            Console.ReadLine();
-
-            connectionParameters.CancelTimeout = TimeSpan.FromSeconds(30);
-            connectionParameters.ConnectTimeout = TimeSpan.FromSeconds(30);
-            connectionParameters.ReceiveTimeout = TimeSpan.FromSeconds(30);
-            /*
-             * Zo dna 7.3. - (0,f,U), (0,f,U), (0,t,T), (0,f,T), (1,f,U), (1,f,U), (1,t,T), (1,f,T) 
-             * Enrypt:  (0,1)
-             * Base64:  (f,t)
-             * Protoc:  (U,T)
-             * Pass: (1,f,T), (1,f,U)
-             * Fail: (1,t,T), (1,t,U), (0,t,U), (0,f,U), (0,t,T), (0,f,T)
-             */
-            connectionParameters.Enryption = false;
-            connectionParameters.UseBase64 = false;
-            connectionParameters.RtpTransport = RtpTransportProtocol.TCP;
-
-            Task connectTask = ConnectAsync(connectionParameters, cancellationTokenSource.Token);
-
-            Console.WriteLine("Press any key to cancel");
-            Console.ReadLine();
-
-            cancellationTokenSource.Cancel();
-
-            Console.WriteLine("Canceling");
-            connectTask.Wait(CancellationToken.None);
-        }
-
-        private static async Task ConnectAsync(ConnectionParameters connectionParameters, CancellationToken token)
-        {
-            try
-            {
-                TimeSpan delay = TimeSpan.FromSeconds(5);
-
-                using (var rtspClient = new RtspClient(connectionParameters))
-                {
-                    rtspClient.FrameReceived +=
-                        (sender, frame) =>
-                        {
-                            Console.WriteLine(
-                                $"New frame {frame.Timestamp}: {frame.GetType().Name} - {frame.FrameSegment.Count}");
-                        };
-
-                    while (true)
-                    {
-                        Console.WriteLine("Connecting...");
-
-                        try
-                        {
-                            await rtspClient.ConnectAsync(token);
-                        }
-                        catch (OperationCanceledException)
-                        {
-                            return;
-                        }
-                        catch (RtspClientException e)
-                        {
-                            Console.WriteLine(e.ToString());
-                            await Task.Delay(delay, token);
-                            continue;
-                        }
-
-                        Console.WriteLine("Connected.");
-
-                        try
-                        {
-                            await rtspClient.ReceiveAsync(token);
-                        }
-                        catch (OperationCanceledException)
-                        {
-                            return;
-                        }
-                        catch (RtspClientException e)
-                        {
-                            Console.WriteLine(e.ToString());
-                            await Task.Delay(delay, token);
-                        }
-                    }
-                }
-            }
-            catch (OperationCanceledException)
-            {
-            }
-        }
-    }
-}
\ No newline at end of file
diff --git a/TestNet5compability/TestNet5compability.csproj b/TestNet5compability/TestNet5compability.csproj
deleted file mode 100644
index 3576d9c..0000000
--- a/TestNet5compability/TestNet5compability.csproj
+++ /dev/null
@@ -1,15 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-
-  <PropertyGroup>
-    <OutputType>Exe</OutputType>
-    <TargetFramework>net5.0</TargetFramework>
-    <Platforms>AnyCPU;x86;x64</Platforms>
-  </PropertyGroup>
-
-  <ItemGroup>
-    <ProjectReference Include="..\RtspClientSharp\RtspClientSharp\LibRtspClientSharp.csproj">
-      <Private>true</Private>
-    </ProjectReference>
-  </ItemGroup>
-
-</Project>
diff --git a/TestNet5compability/Tests.txt b/TestNet5compability/Tests.txt
deleted file mode 100644
index 1c3e3e2..0000000
--- a/TestNet5compability/Tests.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-﻿* Zo dna 7.3.2021
-	* Definicie:
-		* MainDS: ""
-		* Enrypt:=(0,1)
-		* Base64:=(f,t)
-		* Protoc:=(U,T)
-	* Tests: (0,f,U), (0,f,U), (0,t,T), (0,f,T), (1,f,U), (1,f,U), (1,t,T), (1,f,T)
-		* Pass: (1,f,T), (1,f,U)
-		* Fail: (1,t,T), (1,t,U), (0,t,U), (0,f,U), (0,t,T), (0,f,T)
-		* Pozn: "Pravdepodobne je problem pri poslednych neuspesnych testoch iba vtedy ked sa pripaja"
-- koniec zaznamu: 7.3.2021
\ No newline at end of file
diff --git a/UIAcademy/LibUIAcademy.csproj b/UIAcademy/LibUIAcademy.csproj
index 87a3c47..77d936d 100644
--- a/UIAcademy/LibUIAcademy.csproj
+++ b/UIAcademy/LibUIAcademy.csproj
@@ -3,7 +3,7 @@
   <PropertyGroup>
     <TargetFramework>net5.0-windows</TargetFramework>
     <UseWindowsForms>true</UseWindowsForms>
-    <Platforms>AnyCPU;x86;x64</Platforms>
+    <Platforms>AnyCPU;x86</Platforms>
   </PropertyGroup>
 
   <ItemGroup>
